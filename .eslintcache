[{"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\index.js":"1","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\App.js":"2","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reportWebVitals.js":"3","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\common\\SideBarComponent.jsx":"4","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\common\\RouteComponent.jsx":"5","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\common\\HomeScreenComponent.jsx":"6","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\common\\NavigationComponent.jsx":"7","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\store.js":"8","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\shop\\sCartReducers.js":"9","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\user\\roleReducers.js":"10","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Account\\Roleonstants.js":"11","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\shop\\scartContsnts.js":"12","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\user\\accountReducers.js":"13","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Account\\AccountConstsnts.js":"14","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\shop\\scategoryReducers.js":"15","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\shop\\scategoryConstants.js":"16","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\shop\\sInstrumentReducers.js":"17","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\shop\\sinstrumentConstants.js":"18","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\shop\\sOrderReducers.js":"19","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\shop\\sorderConstants.js":"20","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\business\\bCartReducers.js":"21","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\business\\bcartConstants.js":"22","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\business\\bcategoryReducers.js":"23","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\business\\bcategoryConstants.js":"24","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\countryReducers.js":"25","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\countryConstants.js":"26","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\divisionReducers.js":"27","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\divisionConstants.js":"28","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\districtReducers.js":"29","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\upozilaReducers.js":"30","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\unionOrWardReducers.js":"31","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\marketReducers.js":"32","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\addressReducers.js":"33","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\addressConstants.js":"34","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\districtConstants.js":"35","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\marketConstants.js":"36","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\unionConstants.js":"37","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\upozilaConstants.js":"38","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\division\\divisionsScreen.jsx":"39","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\divisionActions.js":"40","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\countryActions.js":"41","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\division\\divisonDetailsScreen.jsx":"42","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\division\\divisionCreateScreen.jsx":"43","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\division\\divisionEditScreen.jsx":"44","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\district\\districtsScreen.jsx":"45","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\districtActions.js":"46","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\district\\districtCreateScreen.jsx":"47","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\district\\districtEditScreen.jsx":"48","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\district\\districtDetailsScreen.jsx":"49","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\upozila\\upozilasScreen.jsx":"50","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\upozilaActions.js":"51","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\upozila\\upozilaCreateScreen.jsx":"52","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\upozila\\upozilaDetailsScreen.jsx":"53","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\upozila\\upozilaEditScreen.jsx":"54","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\union\\unionsScreen.jsx":"55","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\unionOrWardActions.js":"56","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\union\\unionCreateScreen.jsx":"57","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\union\\unionDetailsScreen.jsx":"58","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\union\\unionEditScreen.jsx":"59","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\market\\marketsScreen.jsx":"60","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\marketActions.js":"61","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\market\\marketCreateScreen.jsx":"62","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\market\\marketDetailsScreen.jsx":"63","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\market\\marketEditScreen.jsx":"64","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\service\\config.js":"65","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\AdminSignUpScreen.jsx":"66","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\user\\accountActions.js":"67","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\Role\\RolesScreen.jsx":"68","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\Role\\RoleCreateScreen.jsx":"69","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\Role\\RoleUpdateScreen.jsx":"70","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\Role\\RoleDetailsScreen.jsx":"71","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\user\\roleActions.js":"72","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\SignInScreen.jsx":"73","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\FarmerSignUpScreen.jsx":"74","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\WholeSellerSignUpScreen.jsx":"75","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scategory\\sCaregoriesScreen.jsx":"76","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scategory\\sCategoryCreateScreen.jsx":"77","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scategory\\sCategoryDetails.jsx":"78","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scategory\\sCategoryUpdate.jsx":"79","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\shop\\scategoryAction.js":"80","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcategory\\bCategoriesScreen.jsx":"81","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\business\\bcategoryAction.js":"82","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcategory\\bCategoryDetailsScreen.jsx":"83","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcategory\\bCategoryScreen.jsx":"84","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcategory\\bCategoryUpdate.jsx":"85","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentHomeScreen.jsx":"86","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentCreateScren.jsx":"87","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentDetailsScreen.jsx":"88","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentsScreen.jsx":"89","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumnetUpdateScreen.jsx":"90","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentCategory.jsx":"91","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentListByCategories.jsx":"92","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\shop\\sinstrumentAction.js":"93","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scart\\sCartScreen.jsx":"94","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\shop\\scartAction.js":"95","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\shop\\sorderAction.js":"96","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sorder\\splacesOrder.jsx":"97","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sorder\\sorderListForFarmer.jsx":"98","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sorder\\sorderListForAdmin.jsx":"99","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sorder\\sorderdetails.jsx":"100","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\AreaCode\\AreaCodeComponent.jsx":"101","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\addressActions.js":"102","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bproduct\\createProductScreen.jsx":"103","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\business\\bproductAction.js":"104","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\business\\bproductConstants.js":"105","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\business\\bproductReducers.js":"106","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bproduct\\myproductList.jsx":"107","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bproduct\\wholesellerSearchMarket.jsx":"108","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bproduct\\productDetailsScreen.jsx":"109","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcart\\bCartScreen.jsx":"110","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\business\\bcartAction.js":"111","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\border\\bplaceorder.jsx":"112","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\business\\borderAction.js":"113","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\business\\borderConstants.js":"114","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\business\\borderReducers.js":"115","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\border\\borderListScreenForAdmin.jsx":"116","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\border\\borderDetails.jsx":"117","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\border\\borderListGetForFarmer.jsx":"118","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\WholeSellerListScreen.jsx":"119","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\FarmerListRequest.jsx":"120","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\changePassswordScreen.jsx":"121","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\UserProfileScreen.jsx":"122"},{"size":568,"mtime":1614083170872,"results":"123","hashOfConfig":"124"},{"size":1070,"mtime":1614183560766,"results":"125","hashOfConfig":"124"},{"size":362,"mtime":1607319320339,"results":"126","hashOfConfig":"124"},{"size":8959,"mtime":1614251302806,"results":"127","hashOfConfig":"124"},{"size":10062,"mtime":1614251229005,"results":"128","hashOfConfig":"124"},{"size":317,"mtime":1614246486583,"results":"129","hashOfConfig":"124"},{"size":6362,"mtime":1614246990952,"results":"130","hashOfConfig":"124"},{"size":7847,"mtime":1614249765061,"results":"131","hashOfConfig":"124"},{"size":1062,"mtime":1614086868358,"results":"132","hashOfConfig":"124"},{"size":2766,"mtime":1614053444387,"results":"133","hashOfConfig":"124"},{"size":1171,"mtime":1613983521802,"results":"134","hashOfConfig":"124"},{"size":218,"mtime":1612543856564,"results":"135","hashOfConfig":"124"},{"size":4608,"mtime":1614249418609,"results":"136","hashOfConfig":"124"},{"size":2170,"mtime":1614061664532,"results":"137","hashOfConfig":"124"},{"size":2727,"mtime":1614087711443,"results":"138","hashOfConfig":"124"},{"size":991,"mtime":1614195362553,"results":"139","hashOfConfig":"124"},{"size":3478,"mtime":1614084485547,"results":"140","hashOfConfig":"124"},{"size":1318,"mtime":1614200625602,"results":"141","hashOfConfig":"124"},{"size":3216,"mtime":1614085174538,"results":"142","hashOfConfig":"124"},{"size":1088,"mtime":1612543884772,"results":"143","hashOfConfig":"124"},{"size":1104,"mtime":1614086917366,"results":"144","hashOfConfig":"124"},{"size":218,"mtime":1614086557622,"results":"145","hashOfConfig":"124"},{"size":2659,"mtime":1614087498362,"results":"146","hashOfConfig":"124"},{"size":991,"mtime":1614086574232,"results":"147","hashOfConfig":"124"},{"size":2610,"mtime":1614106461876,"results":"148","hashOfConfig":"124"},{"size":927,"mtime":1614106302157,"results":"149","hashOfConfig":"124"},{"size":2645,"mtime":1614106471396,"results":"150","hashOfConfig":"124"},{"size":957,"mtime":1614106312472,"results":"151","hashOfConfig":"124"},{"size":2645,"mtime":1614106793644,"results":"152","hashOfConfig":"124"},{"size":2597,"mtime":1614106489860,"results":"153","hashOfConfig":"124"},{"size":2507,"mtime":1614106483255,"results":"154","hashOfConfig":"124"},{"size":2553,"mtime":1614106843955,"results":"155","hashOfConfig":"124"},{"size":3797,"mtime":1614106784149,"results":"156","hashOfConfig":"124"},{"size":1249,"mtime":1614106783107,"results":"157","hashOfConfig":"124"},{"size":957,"mtime":1614106792762,"results":"158","hashOfConfig":"124"},{"size":897,"mtime":1614106799307,"results":"159","hashOfConfig":"124"},{"size":867,"mtime":1614106814259,"results":"160","hashOfConfig":"124"},{"size":933,"mtime":1614106825835,"results":"161","hashOfConfig":"124"},{"size":5332,"mtime":1614186508992,"results":"162","hashOfConfig":"124"},{"size":2689,"mtime":1614184478557,"results":"163","hashOfConfig":"124"},{"size":2633,"mtime":1614171390190,"results":"164","hashOfConfig":"124"},{"size":2182,"mtime":1614109935838,"results":"165","hashOfConfig":"124"},{"size":4118,"mtime":1614184723471,"results":"166","hashOfConfig":"124"},{"size":4159,"mtime":1614185167856,"results":"167","hashOfConfig":"124"},{"size":5444,"mtime":1614187279132,"results":"168","hashOfConfig":"124"},{"size":2697,"mtime":1614171398882,"results":"169","hashOfConfig":"124"},{"size":5553,"mtime":1614187352456,"results":"170","hashOfConfig":"124"},{"size":5371,"mtime":1614187341513,"results":"171","hashOfConfig":"124"},{"size":2193,"mtime":1614170781789,"results":"172","hashOfConfig":"124"},{"size":5443,"mtime":1614186704337,"results":"173","hashOfConfig":"124"},{"size":2636,"mtime":1614171446038,"results":"174","hashOfConfig":"124"},{"size":5513,"mtime":1614187402690,"results":"175","hashOfConfig":"124"},{"size":2175,"mtime":1614171943001,"results":"176","hashOfConfig":"124"},{"size":5315,"mtime":1614187420556,"results":"177","hashOfConfig":"124"},{"size":5409,"mtime":1614186717188,"results":"178","hashOfConfig":"124"},{"size":2550,"mtime":1614186874384,"results":"179","hashOfConfig":"124"},{"size":5465,"mtime":1614187463179,"results":"180","hashOfConfig":"124"},{"size":2140,"mtime":1614170850979,"results":"181","hashOfConfig":"124"},{"size":5298,"mtime":1614187470398,"results":"182","hashOfConfig":"124"},{"size":5439,"mtime":1614192443760,"results":"183","hashOfConfig":"124"},{"size":2577,"mtime":1614171407521,"results":"184","hashOfConfig":"124"},{"size":5430,"mtime":1614192376104,"results":"185","hashOfConfig":"124"},{"size":2127,"mtime":1614170817186,"results":"186","hashOfConfig":"124"},{"size":5231,"mtime":1614192384892,"results":"187","hashOfConfig":"124"},{"size":63,"mtime":1612525664440,"results":"188","hashOfConfig":"124"},{"size":6739,"mtime":1614193525238,"results":"189","hashOfConfig":"124"},{"size":8366,"mtime":1614249210866,"results":"190","hashOfConfig":"124"},{"size":4576,"mtime":1614185065048,"results":"191","hashOfConfig":"124"},{"size":4006,"mtime":1614180649936,"results":"192","hashOfConfig":"124"},{"size":2966,"mtime":1614180660059,"results":"193","hashOfConfig":"124"},{"size":1617,"mtime":1614179085225,"results":"194","hashOfConfig":"124"},{"size":2824,"mtime":1614181173823,"results":"195","hashOfConfig":"124"},{"size":4156,"mtime":1614182684048,"results":"196","hashOfConfig":"124"},{"size":20453,"mtime":1614193961934,"results":"197","hashOfConfig":"124"},{"size":20474,"mtime":1614193976257,"results":"198","hashOfConfig":"124"},{"size":5260,"mtime":1614196130437,"results":"199","hashOfConfig":"124"},{"size":3033,"mtime":1614196039321,"results":"200","hashOfConfig":"124"},{"size":1744,"mtime":1614195852456,"results":"201","hashOfConfig":"124"},{"size":3071,"mtime":1614195835642,"results":"202","hashOfConfig":"124"},{"size":2753,"mtime":1614204047966,"results":"203","hashOfConfig":"124"},{"size":5255,"mtime":1614198410701,"results":"204","hashOfConfig":"124"},{"size":2728,"mtime":1614198591592,"results":"205","hashOfConfig":"124"},{"size":3041,"mtime":1614198552951,"results":"206","hashOfConfig":"124"},{"size":1750,"mtime":1614198494940,"results":"207","hashOfConfig":"124"},{"size":3077,"mtime":1614221685398,"results":"208","hashOfConfig":"124"},{"size":2748,"mtime":1614204519052,"results":"209","hashOfConfig":"124"},{"size":11943,"mtime":1614203444540,"results":"210","hashOfConfig":"124"},{"size":4369,"mtime":1614223617998,"results":"211","hashOfConfig":"124"},{"size":7558,"mtime":1614204310778,"results":"212","hashOfConfig":"124"},{"size":13238,"mtime":1614201567641,"results":"213","hashOfConfig":"124"},{"size":3099,"mtime":1614200767630,"results":"214","hashOfConfig":"124"},{"size":2805,"mtime":1614201545567,"results":"215","hashOfConfig":"124"},{"size":3523,"mtime":1614204699330,"results":"216","hashOfConfig":"124"},{"size":7740,"mtime":1614223757865,"results":"217","hashOfConfig":"124"},{"size":1446,"mtime":1614217574527,"results":"218","hashOfConfig":"124"},{"size":3779,"mtime":1614220658616,"results":"219","hashOfConfig":"124"},{"size":6400,"mtime":1614223917833,"results":"220","hashOfConfig":"124"},{"size":4188,"mtime":1614219623650,"results":"221","hashOfConfig":"124"},{"size":4043,"mtime":1614224268368,"results":"222","hashOfConfig":"124"},{"size":3206,"mtime":1614221310784,"results":"223","hashOfConfig":"124"},{"size":4471,"mtime":1614222828853,"results":"224","hashOfConfig":"124"},{"size":3624,"mtime":1614222562759,"results":"225","hashOfConfig":"124"},{"size":12066,"mtime":1614226077387,"results":"226","hashOfConfig":"124"},{"size":3322,"mtime":1614232425820,"results":"227","hashOfConfig":"124"},{"size":1210,"mtime":1614225499874,"results":"228","hashOfConfig":"124"},{"size":3314,"mtime":1614231289510,"results":"229","hashOfConfig":"124"},{"size":2854,"mtime":1614242740603,"results":"230","hashOfConfig":"124"},{"size":7289,"mtime":1614243498039,"results":"231","hashOfConfig":"124"},{"size":4290,"mtime":1614234963744,"results":"232","hashOfConfig":"124"},{"size":7744,"mtime":1614235738325,"results":"233","hashOfConfig":"124"},{"size":1449,"mtime":1614235233737,"results":"234","hashOfConfig":"124"},{"size":6420,"mtime":1614238699347,"results":"235","hashOfConfig":"124"},{"size":4333,"mtime":1614238480294,"results":"236","hashOfConfig":"124"},{"size":1327,"mtime":1614238440061,"results":"237","hashOfConfig":"124"},{"size":3799,"mtime":1614238614698,"results":"238","hashOfConfig":"124"},{"size":4333,"mtime":1614241747303,"results":"239","hashOfConfig":"124"},{"size":3050,"mtime":1614247806016,"results":"240","hashOfConfig":"124"},{"size":4216,"mtime":1614242048075,"results":"241","hashOfConfig":"124"},{"size":3869,"mtime":1614249444251,"results":"242","hashOfConfig":"124"},{"size":3836,"mtime":1614249658941,"results":"243","hashOfConfig":"124"},{"size":7400,"mtime":1614249768522,"results":"244","hashOfConfig":"124"},{"size":9185,"mtime":1614251541070,"results":"245","hashOfConfig":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},"11y1jib",{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"248"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"248"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"248"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"248"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"248"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"248"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"248"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"248"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"248"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"248"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"248"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"248"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"248"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"248"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"248"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"248"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"248"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"248"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"248"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"248"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"248"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"248"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"248"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"248"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"248"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"248"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"248"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"248"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"248"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"248"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"248"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"248"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"248"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"248"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"248"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"248"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"248"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"248"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"248"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"248"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"248"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"248"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"248"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"248"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"248"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"248"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"248"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"248"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"248"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"248"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"248"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"248"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"248"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"248"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"248"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"248"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"248"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"248"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556"},"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\index.js",[],["557","558"],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\App.js",["559","560"],"import './App.css';\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport { useSelector } from \"react-redux\";\nimport RouteComponemt from \"./components/common/RouteComponent\";\nimport NavigationComponent from './components/common/NavigationComponent';\nimport SideBar from './components/common/SideBarComponent';\n\nconst App = () => {\n\n  const userSignIn = useSelector((state) => state.userSignIn);\n  const { userInfo } = userSignIn;\n\n  const [sidebarIsOpen, setSidebarOpen] = useState(true);\n  const toggleSidebar = () => setSidebarOpen(!sidebarIsOpen);\n\n  return (\n    <Router>\n      <div className=\"App wrapper\">\n        {userInfo ? (\n          <SideBar toggle={toggleSidebar} isOpen={sidebarIsOpen} />\n        ) : (\n            <h1></h1>\n          )}\n        <RouteComponemt toggleSidebar={toggleSidebar} sidebarIsOpen={sidebarIsOpen} />\n\n      </div>\n    </Router>\n  );\n};\n\n\nexport default App;\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reportWebVitals.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\common\\SideBarComponent.jsx",["561","562","563"],"import React, { useEffect } from \"react\";\r\nimport { NavItem, NavLink, Nav } from \"reactstrap\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction SideBar({ isOpen, toggle }) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            //\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classNames(\"sidebar\", { \"is-open\": isOpen })}>\r\n            <br />\r\n            <br />\r\n            <div className=\"sidebar-header\">\r\n                <span color=\"info\" onClick={toggle} style={{ color: \"#fff\" }}>\r\n                    &times;\r\n                </span>\r\n\r\n            </div>\r\n            {userInfo.item2.name == \"Admin\" ? (\r\n                <div className=\"side-menu\">\r\n                    <Nav vertical className=\"list-unstyled pb-3\">\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/\"}>\r\n                                <h3>Home</h3>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/divisions\"}>\r\n                                Division\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/districts\"}>\r\n                                District\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/upozilas\"}>\r\n                                Upozila\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/unions\"}>\r\n                                UnionOrWard\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/markets\"}>\r\n                                Market\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/roles\"}>\r\n                                Application_Role\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink>\r\n                                <h3>Shop</h3>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/scategories\"}>\r\n                                Instrument_Category\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/instruments\"}>\r\n                                Instrument\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/instrumentcreate\"}>\r\n                                Instrument Create\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/sorderListforadmin\"}>\r\n                                OrderList\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink>\r\n                                <h3>Business</h3>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/bcategories\"}>\r\n                                Category\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/borderlistadmin\"}>\r\n                                WholeSeller OrderList\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/farmerslist\"}>\r\n                                Farmer\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/wholesellerlist\"}>\r\n                                Whole_Seller\r\n                            </NavLink>\r\n                        </NavItem>\r\n\r\n                    </Nav>\r\n                </div>\r\n            ) : (\r\n\r\n                    <h1> </h1>\r\n                )\r\n            }\r\n\r\n\r\n            {userInfo.item2.name == \"Farmer\" ? (\r\n                <div className=\"side-menu\">\r\n                    <Nav vertical className=\"list-unstyled pb-3\">\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/\"}>\r\n                                <h3>Farmer</h3>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/instruments\"}>\r\n                                Instrument\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/sorderList\"}>\r\n                                My Order\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/areacodes\"}>\r\n                                Area_Code\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/createproduct\"}>\r\n                                Create_Product\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/myproducts\"}>\r\n                                My Products\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/profile\"}>\r\n                                Profile\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/changepassword\"}>\r\n                                Password Change\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n\r\n\r\n                </div>\r\n            ) : (\r\n                    <h1> </h1>\r\n                )\r\n            }\r\n\r\n            {userInfo.item2.name == \"WholeSeller\" ? (\r\n                <div className=\"side-menu\">\r\n                    <Nav vertical className=\"list-unstyled pb-3\">\r\n\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/\"}>\r\n                                <h3>Whole Seller</h3>\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/findMarket\"}>\r\n                                Find Market\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/borderlistadmin\"}>\r\n                                WholeSeller OrderList\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        {/* <NavItem>\r\n                            <NavLink tag={Link} to={\"/findMarket\"}>\r\n                                Farmer OrderList[Get]\r\n                            </NavLink>\r\n                        </NavItem> */}\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/areacodes\"}>\r\n                                Area_Code\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/profile\"}>\r\n                                Profile\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink tag={Link} to={\"/changepassword\"}>\r\n                                Password Change\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </div>\r\n            ) : (\r\n                    <h1> </h1>\r\n                )\r\n            }\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default SideBar;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\common\\RouteComponent.jsx",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\common\\HomeScreenComponent.jsx",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\common\\NavigationComponent.jsx",["564"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    Navbar,\r\n    Button,\r\n    NavbarToggler,\r\n    Collapse,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n} from \"reactstrap\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faAlignLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { userSignOut } from '../../actions/user/accountActions'\r\n\r\n\r\nconst NavigationComponent = ({ toggleSidebar, props }) => {\r\n\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n    const [topbarIsOpen, setTopbarOpen] = useState(true);\r\n    const toggleTopbar = () => setTopbarOpen(!topbarIsOpen);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            //\r\n        }\r\n    }, [])\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(userSignOut());\r\n    }\r\n    // const handleLogout = () => {\r\n    //     dispatch(userSignOut());\r\n    // }\r\n\r\n    return (\r\n        <Navbar\r\n            color=\"#fff\"\r\n            style={{ backgroundColor: \"#fff\", height: \"60px\", borderBlockColor: \"#1FC46C\", borderColor: \"#1FC46C\" }}\r\n            light\r\n            className=\"navbar\"\r\n            expand=\"md\"\r\n            fixed=\"top\"\r\n        >\r\n            <Button style={{ color: \"#fff\", background: \"#1FC46C\" }} onClick={toggleSidebar}>\r\n                <b>F_S</b>\r\n            </Button>\r\n            <NavbarToggler onClick={toggleTopbar} />\r\n            <Collapse isOpen={topbarIsOpen} navbar>\r\n\r\n                <Nav>\r\n                    <NavLink style={{ color: \"#1FC46C\" }} href=\"/products\"><h1>Farmers_Solution</h1></NavLink>\r\n                </Nav>\r\n                {userInfo ? (\r\n                    <Nav className=\"ml-auto\" navbar>\r\n\r\n                        {/* <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 0,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                            <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 0,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem> */}\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 10,\r\n                                width: \"100px\",\r\n                                textAlign: \"center\"\r\n                            }} onClick={handleLogout}><h5>Logout </h5></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink style={{\r\n                                color: \"#1FC46C\",\r\n                                backgroundColor: \"#fff\",\r\n                                borderRadius: 0,\r\n                                width: \"10px\",\r\n                                textAlign: \"center\"\r\n                            }}></NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n\r\n                ) : (\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink style={{\r\n                                    color: \"#1FC46C\",\r\n                                    backgroundColor: \"#fff\",\r\n                                    borderRadius: 0,\r\n                                    width: \"200px\",\r\n                                    textAlign: \"center\"\r\n                                }} href=\"/wholesellersignup\"><h5><i>WholeSeller_SignUp</i></h5></NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink style={{\r\n                                    color: \"#1FC46C\",\r\n                                    backgroundColor: \"#fff\",\r\n                                    borderRadius: 0,\r\n                                    width: \"200px\",\r\n                                    textAlign: \"center\"\r\n                                }} href=\"/farmersignup\"><h5><i>Farmer_SignUp</i></h5></NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink style={{\r\n                                    color: \"#1FC46C\",\r\n                                    backgroundColor: \"#fff\",\r\n                                    borderRadius: 0,\r\n                                    width: \"10px\",\r\n                                    textAlign: \"center\"\r\n                                }}></NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink style={{\r\n                                    color: \"#1FC46C\",\r\n                                    backgroundColor: \"#fff\",\r\n                                    borderRadius: 0,\r\n                                    width: \"100px\",\r\n                                    textAlign: \"center\"\r\n                                }} href=\"/SignIn\"><h5><i>SignIn</i></h5></NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink style={{\r\n                                    color: \"#1FC46C\",\r\n                                    backgroundColor: \"#fff\",\r\n                                    borderRadius: 0,\r\n                                    width: \"10px\",\r\n                                    textAlign: \"center\"\r\n                                }}></NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    )}\r\n            </Collapse>\r\n        </Navbar >\r\n    );\r\n\r\n};\r\n\r\nexport default NavigationComponent;\r\n\r\n\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\store.js",["565"],"import {\r\n    createStore,\r\n    combineReducers,\r\n    applyMiddleware,\r\n    compose\r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport Cookie from 'js-cookie';\r\nimport { roleDeleteReducer, roleDetailsReducer, roleListReducer, roleSaveReducer, roleUpdateReducer } from './reducers/user/roleReducers';\r\n//import { cartReducer } from './reducers/shop/sCartReducers';\r\nimport { adminRegistrationReducer, farmerListReducer, farmerRegistrationReducer, holesellerListReducer, holesellerRegistrationReducer, userProfileDetailsReducer, userSigninReducer, userUpdatePasswordReducer, userUpdateReducer } from './reducers/user/accountReducers';\r\nimport { cartReducer, scartReducer } from './reducers/shop/sCartReducers';\r\nimport {\r\n    scategoryListReducer,\r\n    scategoryDetailsReducer,\r\n    scategoryDeleteReducer,\r\n    scategoryUpdateReducer,\r\n    scategorySaveReducer\r\n} from './reducers/shop/scategoryReducers'\r\n\r\nimport {\r\n    sinstrumentListReducer,\r\n    sinstrumentListByCategoryReducer,\r\n    sinstrumentDetailsReducer,\r\n    sinstrumentDeleteReducer,\r\n    sinstrumentUpdateReducer,\r\n    sinstrumentSaveReducer\r\n} from './reducers/shop/sInstrumentReducers'\r\nimport {\r\n    mysOrderListReducer,\r\n    sorderCreateReducer,\r\n    sorderDeleteReducer,\r\n    sorderDetailsReducer,\r\n    sorderListReducer,\r\n    sorderPayReducer\r\n} from './reducers/shop/sOrderReducers';\r\nimport { bcartReducer } from './reducers/business/bCartReducers';\r\nimport {\r\n    bcategoryDeleteReducer,\r\n    bcategoryDetailsReducer,\r\n    bcategoryListReducer,\r\n    bcategorySaveReducer,\r\n    bcategoryUpdateReducer\r\n} from './reducers/business/bcategoryReducers';\r\n\r\nimport {\r\n    sproductListReducer,\r\n    sproductListByCategoryReducer,\r\n    sproductDetailsReducer,\r\n    sproductDeleteReducer,\r\n    sproductUpdateReducer,\r\n    sproductSaveReducer\r\n} from './reducers/business/bproductReducers'\r\n\r\nimport { countryDeleteReducer, countryDetailsReducer, countryListReducer, countrySaveReducer, countryUpdateReducer } from './reducers/Area/countryReducers';\r\nimport { divisionDeleteReducer, divisionDetailsReducer, divisionListReducer, divisionSaveReducer, divisionUpdateReducer } from './reducers/Area/divisionReducers';\r\nimport { districtDeleteReducer, districtDetailsReducer, districtListReducer, districtSaveReducer, districtUpdateReducer } from './reducers/Area/districtReducers';\r\nimport { upozilaDeleteReducer, upozilaDetailsReducer, upozilaListReducer, upozilaSaveReducer, upozilaUpdateReducer } from './reducers/Area/upozilaReducers';\r\nimport { unionDeleteReducer, unionDetailsReducer, unionListReducer, unionSaveReducer, unionUpdateReducer } from './reducers/Area/unionOrWardReducers';\r\nimport { marketDeleteReducer, marketDetailsReducer, marketListReducer, marketSaveReducer, marketUpdateReducer } from './reducers/Area/marketReducers';\r\nimport { areaCodeListReducerad, countryListReducerad, districtListReducerad, divisionListReducerad, marketListReducerad, unionListReducerad, upozilaListReducerad } from './reducers/Area/addressReducers';\r\nimport { borderCreateReducer, borderDeleteReducer, borderDetailsReducer, borderListReducer, borderPayReducer, farmerbOrderListReducer, mybOrderListReducer } from './reducers/business/borderReducers';\r\n\r\n\r\nconst scartItems = Cookie.getJSON('scartItems') || [];\r\nconst bcartItems = Cookie.getJSON('bcartItems') || [];\r\nconst userInfo = Cookie.getJSON('userInfo') || null;\r\n\r\n\r\nconst initialState = {\r\n    scart: { scartItems },\r\n    bcart: { bcartItems },\r\n    userSignIn: { userInfo },\r\n};\r\n\r\nconst reducer = combineReducers({\r\n\r\n    roleList: roleListReducer,\r\n    roleDetails: roleDetailsReducer,\r\n    roleSave: roleSaveReducer,\r\n    roleUpdate: roleUpdateReducer,\r\n    roleDelete: roleDeleteReducer,\r\n\r\n    farmerRegistrationReducer: farmerRegistrationReducer,\r\n    holesellerListReducer: holesellerListReducer,\r\n    holesellerRegistrationReducer: holesellerRegistrationReducer,\r\n    adminRegistrationReducer: adminRegistrationReducer,\r\n    userUpdateReducer: userUpdateReducer,\r\n    userPasswordUpdate: userUpdatePasswordReducer,\r\n    userProfileDetailsReducer: userProfileDetailsReducer,\r\n    farmerListReducer: farmerListReducer,\r\n\r\n    scategoryListReducer: scategoryListReducer,\r\n    scategoryDetailsReducer: scategoryDetailsReducer,\r\n    scategoryDeleteReducer: scategoryDeleteReducer,\r\n    scategoryUpdateReducer: scategoryUpdateReducer,\r\n    scategorySaveReducer: scategorySaveReducer,\r\n\r\n    bcategoryListReducer: bcategoryListReducer,\r\n    bcategoryDetailsReducer: bcategoryDetailsReducer,\r\n    bcategoryDeleteReducer: bcategoryDeleteReducer,\r\n    bcategoryUpdateReducer: bcategoryUpdateReducer,\r\n    bcategorySaveReducer: bcategorySaveReducer,\r\n\r\n    sinstrumentListReducer: sinstrumentListReducer,\r\n    sinstrumentListByCategoryReducer: sinstrumentListByCategoryReducer,\r\n    sinstrumentDetailsReducer: sinstrumentDetailsReducer,\r\n    sinstrumentDeleteReducer: sinstrumentDeleteReducer,\r\n    sinstrumentUpdateReducer: sinstrumentUpdateReducer,\r\n    sinstrumentSaveReducer: sinstrumentSaveReducer,\r\n\r\n    sorderCreateReducer: sorderCreateReducer,\r\n    sorderDetailsReducer: sorderDetailsReducer,\r\n    sorderPayReducer: sorderPayReducer,\r\n    mysOrderListReducer: mysOrderListReducer,\r\n    sorderListReducer: sorderListReducer,\r\n    sorderDeleteReducer: sorderDeleteReducer,\r\n\r\n    countryList: countryListReducer,\r\n    countryDetails: countryDetailsReducer,\r\n    countrySave: countrySaveReducer,\r\n    countryUpdate: countryUpdateReducer,\r\n    countryDelete: countryDeleteReducer,\r\n\r\n    divisionList: divisionListReducer,\r\n    divisionDetails: divisionDetailsReducer,\r\n    divisionSave: divisionSaveReducer,\r\n    divisionUpdate: divisionUpdateReducer,\r\n    divisionDelete: divisionDeleteReducer,\r\n\r\n    districtList: districtListReducer,\r\n    districtDetails: districtDetailsReducer,\r\n    districtSave: districtSaveReducer,\r\n    districtUpdate: districtUpdateReducer,\r\n    districtDelete: districtDeleteReducer,\r\n\r\n    upozilaList: upozilaListReducer,\r\n    upozilaDetails: upozilaDetailsReducer,\r\n    upozilaSave: upozilaSaveReducer,\r\n    upozilaUpdate: upozilaUpdateReducer,\r\n    upozilaDelete: upozilaDeleteReducer,\r\n\r\n    unionList: unionListReducer,\r\n    unionDetails: unionDetailsReducer,\r\n    unionSave: unionSaveReducer,\r\n    unionUpdate: unionUpdateReducer,\r\n    unionDelete: unionDeleteReducer,\r\n\r\n    marketList: marketListReducer,\r\n    marketDetails: marketDetailsReducer,\r\n    marketSave: marketSaveReducer,\r\n    marketUpdate: marketUpdateReducer,\r\n    marketDelete: marketDeleteReducer,\r\n\r\n    countryListAd: countryListReducerad,\r\n    divisionListAd: divisionListReducerad,\r\n    districtListAd: districtListReducerad,\r\n    upozilaListAd: upozilaListReducerad,\r\n    unionListAd: unionListReducerad,\r\n    marketListAd: marketListReducerad,\r\n    areaCodeList: areaCodeListReducerad,\r\n\r\n    userSignIn: userSigninReducer,\r\n    scart: scartReducer,\r\n    bcart: bcartReducer,\r\n\r\n\r\n    sproductListReducer: sproductListReducer,\r\n    sproductListByCategoryReducer: sproductListByCategoryReducer,\r\n    sproductDetailsReducer: sproductDetailsReducer,\r\n    sproductDeleteReducer: sproductDeleteReducer,\r\n    sproductUpdateReducer: sproductUpdateReducer,\r\n    sproductSaveReducer: sproductSaveReducer,\r\n\r\n    borderCreateReducer: borderCreateReducer,\r\n    borderDetailsReducer: borderDetailsReducer,\r\n    borderPayReducer: borderPayReducer,\r\n    mybOrderListReducer: mybOrderListReducer,\r\n    farmerbOrderListReducer: farmerbOrderListReducer,\r\n    borderListReducer: borderListReducer,\r\n    borderDeleteReducer: borderDeleteReducer,\r\n\r\n    form: formReducer\r\n})\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\shop\\sCartReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\user\\roleReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Account\\Roleonstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\shop\\scartContsnts.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\user\\accountReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Account\\AccountConstsnts.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\shop\\scategoryReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\shop\\scategoryConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\shop\\sInstrumentReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\shop\\sinstrumentConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\shop\\sOrderReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\shop\\sorderConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\business\\bCartReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\business\\bcartConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\business\\bcategoryReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\business\\bcategoryConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\countryReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\countryConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\divisionReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\divisionConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\districtReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\upozilaReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\unionOrWardReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\marketReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\Area\\addressReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\addressConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\districtConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\marketConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\unionConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\Area\\upozilaConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\division\\divisionsScreen.jsx",["566"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { deleteDivision, listDivisions } from \"../../../actions/Area/divisionActions\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteDivision(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deted category an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst DivisionScreen = (props) => {\r\n\r\n    const divisionList = useSelector((state) => state.divisionList);\r\n    const { divisions } = divisionList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listDivisions());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"divisionCode\",\r\n            text: \"Division Code\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"country.name\",\r\n            text: \"Country\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        {/* <Link to={\"divisiondetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link> */}\r\n                        <Link to={\"divisionupdate/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {divisions ? (\r\n                        <ToolkitProvider\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={divisions}\r\n                            columns={columns}\r\n                            defaultSorted={defaultSorted}\r\n                            search\r\n                        >\r\n                            {(props) => (\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Link to=\"/divisioncreate\">\r\n                                                <Button color=\"dark\" className=\"mr-2\">\r\n                                                    Create Division\r\n                                        </Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <div className=\"float-right\">\r\n                                                <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        pagination={paginationFactory()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </ToolkitProvider>\r\n                    ) : (\r\n                            <div className=\"text-center\">\r\n                                {props.errorCategoriesList ? (\r\n                                    <h4>{props.errorCategoriesList}</h4>\r\n                                ) : (\r\n                                        <Spinner color=\"dark\" />\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\nexport default DivisionScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\divisionActions.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\countryActions.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\division\\divisonDetailsScreen.jsx",["567"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsCountry } from \"../../../actions/Area/countryActions\";\r\nimport { detailsDivision } from \"../../../actions/Area/divisionActions\";\r\n\r\nconst DivisionDetails = (props) => {\r\n\r\n    const divisionId = props.match.params.id;\r\n\r\n    const divisionDetails = useSelector((state) => state.divisionDetails);\r\n    const { division } = divisionDetails;\r\n\r\n\r\n    const countryDetails = useSelector((state) => state.countryDetails);\r\n    const { country } = countryDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsDivision(divisionId));\r\n        dispatch(detailsCountry(division.countryId));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [divisionId, division.countryId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Division</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{division.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Division Code</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{division.divisionCode}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Country</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{country.name}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DivisionDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\division\\divisionCreateScreen.jsx",["568","569","570","571","572"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nimport {\r\n    listDivisions, saveDivision\r\n} from '../../../actions/Area/divisionActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\n\r\nfunction DivisionCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [divisionCode, setDivisionCode] = useState('');\r\n\r\n    const divisionSave = useSelector((state) => state.divisionSave);\r\n\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = divisionSave;\r\n\r\n    const divisionDelete = useSelector((state) => state.divisionDelete);\r\n\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = divisionDelete;\r\n\r\n    const countryList = useSelector((state) => state.countryList);\r\n    const { countries } = countryList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listDivisions());\r\n\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveDivision({\r\n                name,\r\n                divisionCode,\r\n            })\r\n        );\r\n        props.history.push(\"/divisions\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {countries ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Create Division</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        placeholder=\"Enter division Name\"\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"divisionCode\">Division Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"divisionCode\"\r\n                                        id=\"divisionCode\"\r\n                                        placeholder=\"Enter division Code\"\r\n                                        size=\"lg\"\r\n                                        value={divisionCode}\r\n                                        onChange={(e) => setDivisionCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default DivisionCreateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\division\\divisionEditScreen.jsx",["573"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    updateDivision,\r\n    detailsDivision\r\n} from '../../../actions/Area/divisionActions';\r\n\r\nimport {\r\n    listCountries\r\n} from '../../../actions/Area/countryActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction DivisionEditScreen(props) {\r\n\r\n    const divisionId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [divisionCode, setDivisionCode] = useState('');\r\n\r\n\r\n    const divisionDetails = useSelector((state) => state.divisionDetails);\r\n    const { division } = divisionDetails;\r\n\r\n    // const countryList = useSelector((state) => state.countryList);\r\n    // const { countries } = countryList;\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(detailsDivision(divisionId));\r\n        dispatch(listCountries());\r\n        console.log(\"divisionss\", division)\r\n\r\n        if (typeof division != 'undefined') {\r\n            console.log(\"name\", division.name)\r\n            setName(division.name)\r\n            setDivisionCode(division.divisionCode)\r\n\r\n        }\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [divisionId]);\r\n\r\n    function submitHandler() {\r\n\r\n        dispatch(\r\n            updateDivision({\r\n                name,\r\n                divisionCode,\r\n\r\n            }, divisionId)\r\n        );\r\n        props.history.push(\"/divisions\");\r\n    };\r\n\r\n    // const setCountryHandler = (e) => {\r\n    //     setCountry(e.target.value);\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {1 ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Update Role</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"divisionCode\">Division Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"divisionCode\"\r\n                                        id=\"divisionCode\"\r\n                                        size=\"lg\"\r\n                                        value={divisionCode}\r\n                                        onChange={(e) => setDivisionCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default DivisionEditScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\district\\districtsScreen.jsx",["574"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\n\r\n\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { deleteDistrict, listDistricts } from \"../../../actions/Area/districtActions\";\r\nimport { listDivisions } from \"../../../actions/Area/divisionActions\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteDistrict(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deted category an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\nconst DistrictScreen = (props) => {\r\n\r\n    const districtList = useSelector((state) => state.districtList);\r\n    const { districts } = districtList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listDistricts());\r\n        dispatch(listDivisions());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"districtCode\",\r\n            text: \"District Code\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"division.name\",\r\n            text: \"Division\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        {/* <Link to={\"districtdetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link> */}\r\n                        <Link to={\"districtupdate/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {districts ? (\r\n                        <ToolkitProvider\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={districts}\r\n                            columns={columns}\r\n                            defaultSorted={defaultSorted}\r\n                            search\r\n                        >\r\n                            {(props) => (\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Link to=\"/districtcreate\">\r\n                                                <Button color=\"dark\" className=\"mr-2\">\r\n                                                    Create District\r\n                                        </Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <div className=\"float-right\">\r\n                                                <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        pagination={paginationFactory()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </ToolkitProvider>\r\n                    ) : (\r\n                            <div className=\"text-center\">\r\n                                {props.errorCategoriesList ? (\r\n                                    <h4>{props.errorCategoriesList}</h4>\r\n                                ) : (\r\n                                        <Spinner color=\"dark\" />\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DistrictScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\districtActions.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\district\\districtCreateScreen.jsx",["575","576","577","578","579"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    saveDistrict,\r\n    listDistricts\r\n} from '../../../actions/Area/districtActions';\r\n\r\nimport {\r\n    listDivisions\r\n} from '../../../actions/Area/divisionActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction DistrictCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [districtCode, setDistrictCode] = useState('');\r\n    const [divisionId, setDivision] = useState('');\r\n\r\n\r\n\r\n    const districtSave = useSelector((state) => state.districtSave);\r\n\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = districtSave;\r\n\r\n    const districtDelete = useSelector((state) => state.districtDelete);\r\n\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = districtDelete;\r\n\r\n    const divisionList = useSelector((state) => state.divisionList);\r\n    const { divisions } = divisionList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listDistricts());\r\n        dispatch(listDivisions());\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveDistrict({\r\n                name,\r\n                districtCode,\r\n                divisionId\r\n            })\r\n        );\r\n        props.history.push(\"/districts\");\r\n    };\r\n    const setDivisionHandler = (e) => {\r\n        setDivision(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {divisions ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Create District</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        placeholder=\"Enter division Name\"\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"districtCode\">District Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"districtCode\"\r\n                                        id=\"districtCode\"\r\n                                        placeholder=\"Enter division Code\"\r\n                                        size=\"lg\"\r\n                                        value={districtCode}\r\n                                        onChange={(e) => setDistrictCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"division\">Division</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"division\"\r\n                                        id=\"division\"\r\n                                        size=\"lg\"\r\n                                        onChange={setDivisionHandler}\r\n                                    >\r\n                                        <option>Select division</option>\r\n                                        {divisions.map((division) => (\r\n                                            <option value={division.id}>\r\n                                                {division.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default DistrictCreateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\district\\districtEditScreen.jsx",["580"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    updateDistrict,\r\n    detailsDistrict\r\n} from '../../../actions/Area/districtActions';\r\n\r\nimport {\r\n    listDivisions\r\n} from '../../../actions/Area/divisionActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction DistrictEditScreen(props) {\r\n    const districtId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [districtCode, setDistrictCode] = useState('');\r\n    const [divisionId, setDivision] = useState('');\r\n\r\n\r\n    const districtDetails = useSelector((state) => state.districtDetails);\r\n\r\n    const { district } = districtDetails;\r\n\r\n\r\n\r\n    const divisionList = useSelector((state) => state.divisionList);\r\n    const { divisions } = divisionList;\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = district;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsDistrict(districtId));\r\n        dispatch(listDivisions());\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateDistrict({\r\n                name,\r\n                districtCode,\r\n                divisionId\r\n            }, districtId)\r\n        );\r\n        props.history.push(\"/districts\");\r\n    };\r\n    const setDivisionHandler = (e) => {\r\n        setDivision(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {divisions ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Update District</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        placeholder={district.name}\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"district\">District Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"district\"\r\n                                        id=\"district\"\r\n                                        placeholder={district.districtCode}\r\n                                        size=\"lg\"\r\n                                        value={districtCode}\r\n                                        onChange={(e) => setDistrictCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"division\">Division</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"division\"\r\n                                        id=\"division\"\r\n                                        size=\"lg\"\r\n                                        onChange={setDivisionHandler}\r\n                                    >\r\n                                        <option>Select Division</option>\r\n                                        {divisions.map((division) => (\r\n                                            <option value={division.id}>\r\n                                                {division.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default DistrictEditScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\district\\districtDetailsScreen.jsx",["581"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsDivision } from \"../../../actions/Area/divisionActions\";\r\nimport { detailsDistrict } from \"../../../actions/Area/districtActions\";\r\n\r\nconst DistrictDetails = (props) => {\r\n\r\n    const districtId = props.match.params.id;\r\n\r\n    const districtDetails = useSelector((state) => state.districtDetails);\r\n    const { district } = districtDetails;\r\n\r\n\r\n    const divisionDetails = useSelector((state) => state.divisionDetails);\r\n    const { division } = divisionDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsDistrict(districtId));\r\n        dispatch(detailsDivision(district.divisionId));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [districtId, district.divisionId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Division</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{district.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">District Code</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{district.districtCode}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Division</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{division.name}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DistrictDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\upozila\\upozilasScreen.jsx",["582"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\n\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { deleteUpozila, listUpozilas } from \"../../../actions/Area/upozilaActions\";\r\nimport { listDistricts } from \"../../../actions/Area/districtActions\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteUpozila(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deted category an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst UpozilaScreen = (props) => {\r\n\r\n    const upozilaList = useSelector((state) => state.upozilaList);\r\n    const { upozilas } = upozilaList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listUpozilas());\r\n        dispatch(listDistricts());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"upozilaCode\",\r\n            text: \"Upozila Code\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"district.name\",\r\n            text: \"District\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        {/* <Link to={\"upoziladetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                 Detail\r\n                            </Button>\r\n                        </Link> */}\r\n                        <Link to={\"upozilaupdate/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {upozilas ? (\r\n                        <ToolkitProvider\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={upozilas}\r\n                            columns={columns}\r\n                            defaultSorted={defaultSorted}\r\n                            search\r\n                        >\r\n                            {(props) => (\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Link to=\"/upozilacreate\">\r\n                                                <Button color=\"dark\" className=\"mr-2\">\r\n                                                    Create District\r\n                                        </Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <div className=\"float-right\">\r\n                                                <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        pagination={paginationFactory()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </ToolkitProvider>\r\n                    ) : (\r\n                            <div className=\"text-center\">\r\n                                {props.errorCategoriesList ? (\r\n                                    <h4>{props.errorCategoriesList}</h4>\r\n                                ) : (\r\n                                        <Spinner color=\"dark\" />\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default UpozilaScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\upozilaActions.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\upozila\\upozilaCreateScreen.jsx",["583","584","585","586","587"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    saveUpozila,\r\n    listUpozilas\r\n} from '../../../actions/Area/upozilaActions';\r\n\r\nimport {\r\n    listDistricts\r\n} from '../../../actions/Area/districtActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction UpozilaCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [upozilaCode, setUpozilaCode] = useState('');\r\n    const [districtId, setDivision] = useState('');\r\n\r\n\r\n\r\n    const upozilaSave = useSelector((state) => state.upozilaSave);\r\n\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = upozilaSave;\r\n\r\n    const upozilaDelete = useSelector((state) => state.upozilaDelete);\r\n\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = upozilaDelete;\r\n\r\n    const districtList = useSelector((state) => state.districtList);\r\n    const { districts } = districtList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listUpozilas());\r\n        dispatch(listDistricts());\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveUpozila({\r\n                name,\r\n                upozilaCode,\r\n                districtId\r\n            })\r\n        );\r\n        props.history.push(\"/upozilas\");\r\n    };\r\n    const setDivisionHandler = (e) => {\r\n        setDivision(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {districts ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Create Upozila</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        placeholder=\"Enter division Name\"\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"upozila\">Upozila Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"upozila\"\r\n                                        id=\"upozila\"\r\n                                        placeholder=\"Enter division Code\"\r\n                                        size=\"lg\"\r\n                                        value={upozilaCode}\r\n                                        onChange={(e) => setUpozilaCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"division\">Division</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"division\"\r\n                                        id=\"division\"\r\n                                        size=\"lg\"\r\n                                        onChange={setDivisionHandler}\r\n                                    >\r\n                                        <option>Select division</option>\r\n                                        {districts.map((division) => (\r\n                                            <option value={division.id}>\r\n                                                {division.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default UpozilaCreateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\upozila\\upozilaDetailsScreen.jsx",["588"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsUpozila } from \"../../../actions/Area/upozilaActions\";\r\nimport { detailsDistrict } from \"../../../actions/Area/districtActions\";\r\n\r\nconst UpozilaDetails = (props) => {\r\n\r\n    const upozilaId = props.match.params.id;\r\n\r\n    const upozilaDetails = useSelector((state) => state.upozilaDetails);\r\n    const { upozila } = upozilaDetails;\r\n\r\n\r\n    const districtDetails = useSelector((state) => state.districtDetails);\r\n    const { district } = districtDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsUpozila(upozilaId));\r\n        dispatch(detailsDistrict(upozila.districtId));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [upozilaId, upozila.districtId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Upozila</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{upozila.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">District Code</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{upozila.upozilaCode}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">District</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{district.name}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpozilaDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\upozila\\upozilaEditScreen.jsx",["589"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    updateUpozila,\r\n    detailsUpozila\r\n} from '../../../actions/Area/upozilaActions';\r\n\r\nimport {\r\n    listDistricts\r\n} from '../../../actions/Area/districtActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction UpozilaEditScreen(props) {\r\n\r\n    const upozilaDetails = useSelector((state) => state.upozilaDetails);\r\n\r\n    const { upozila } = upozilaDetails;\r\n\r\n    const upozilaId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [upozilaCode, setUpozilaCode] = useState('');\r\n    const [districtId, setDistrict] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n    const districtList = useSelector((state) => state.districtList);\r\n    const { districts } = districtList;\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = upozila;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsUpozila(upozilaId));\r\n        dispatch(listDistricts());\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateUpozila({\r\n                name,\r\n                upozilaCode,\r\n                districtId\r\n            }, upozilaId)\r\n        );\r\n        props.history.push(\"/upozilas\");\r\n    };\r\n    const setDistrictHandler = (e) => {\r\n        setDistrict(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {districts ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Update Upozila</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        size=\"lg\"\r\n                                        defaultValue={upozila.name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"district\">District Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"district\"\r\n                                        id=\"district\"\r\n                                        placeholder={upozila.upozilaCode}\r\n                                        size=\"lg\"\r\n                                        defaultValue={upozila.upozilaCode}\r\n                                        onChange={(e) => setUpozilaCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"division\">Division</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"division\"\r\n                                        id=\"division\"\r\n                                        size=\"lg\"\r\n                                        onChange={setDistrictHandler}\r\n                                    >\r\n                                        <option>Select Division</option>\r\n                                        {districts.map((division) => (\r\n                                            <option value={division.id}>\r\n                                                {division.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default UpozilaEditScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\union\\unionsScreen.jsx",["590"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\n\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { deleteUnion, listUnions } from \"../../../actions/Area/unionOrWardActions\";\r\nimport { listUpozilas } from \"../../../actions/Area/upozilaActions\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteUnion(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deted category an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst UnionScreen = (props) => {\r\n\r\n    const unionList = useSelector((state) => state.unionList);\r\n    const { unions } = unionList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listUnions());\r\n        dispatch(listUpozilas());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"unionOrWardCode\",\r\n            text: \"Union Code\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"upozila.name\",\r\n            text: \"Upozila\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        {/* <Link to={\"uniondetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                              Detail\r\n                            </Button>\r\n                        </Link> */}\r\n                        <Link to={\"unionupdate/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                 Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {unions ? (\r\n                        <ToolkitProvider\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={unions}\r\n                            columns={columns}\r\n                            defaultSorted={defaultSorted}\r\n                            search\r\n                        >\r\n                            {(props) => (\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Link to=\"/unioncreate\">\r\n                                                <Button color=\"dark\" className=\"mr-2\">\r\n                                                    Create Union\r\n                                        </Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <div className=\"float-right\">\r\n                                                <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        pagination={paginationFactory()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </ToolkitProvider>\r\n                    ) : (\r\n                            <div className=\"text-center\">\r\n                                {props.errorCategoriesList ? (\r\n                                    <h4>{props.errorCategoriesList}</h4>\r\n                                ) : (\r\n                                        <Spinner color=\"dark\" />\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n            </div>\r\n            \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default UnionScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\unionOrWardActions.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\union\\unionCreateScreen.jsx",["591","592","593","594","595"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    saveUnion,\r\n    listUnions\r\n} from '../../../actions/Area/unionOrWardActions';\r\n\r\nimport {\r\n    listUpozilas\r\n} from '../../../actions/Area/upozilaActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction UnionCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [unionOrWardCode, setUnionCode] = useState('');\r\n    const [upozilaId, setUpozila] = useState('');\r\n\r\n\r\n\r\n    const unionSave = useSelector((state) => state.unionSave);\r\n\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = unionSave;\r\n\r\n    const unionDelete = useSelector((state) => state.unionDelete);\r\n\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = unionDelete;\r\n\r\n    const upozilaList = useSelector((state) => state.upozilaList);\r\n    const { upozilas } = upozilaList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listUnions());\r\n        dispatch(listUpozilas());\r\n\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveUnion({\r\n                name,\r\n                unionOrWardCode,\r\n                upozilaId\r\n            })\r\n        );\r\n        props.history.push(\"/unions\");\r\n    };\r\n    const setUpozilaHandler = (e) => {\r\n        setUpozila(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {upozilas ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Create Union</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        placeholder=\"Enter division Name\"\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"union\">Union Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"union\"\r\n                                        id=\"union\"\r\n                                        placeholder=\"Enter Union Code\"\r\n                                        size=\"lg\"\r\n                                        value={unionOrWardCode}\r\n                                        onChange={(e) => setUnionCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"upozila\">Upozila</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"upozila\"\r\n                                        id=\"upozila\"\r\n                                        size=\"lg\"\r\n                                        onChange={setUpozilaHandler}\r\n                                    >\r\n                                        <option>Select Upozila</option>\r\n                                        {upozilas.map((upozila) => (\r\n                                            <option value={upozila.id}>\r\n                                                {upozila.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default UnionCreateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\union\\unionDetailsScreen.jsx",["596"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsUpozila } from \"../../../actions/Area/upozilaActions\";\r\nimport { detailsUnion } from \"../../../actions/Area/unionOrWardActions\";\r\n\r\nconst UnionDetails = (props) => {\r\n\r\n    const unionId = props.match.params.id;\r\n\r\n    const unionDetails = useSelector((state) => state.unionDetails);\r\n    const { union } = unionDetails;\r\n\r\n\r\n    const upozilaDetails = useSelector((state) => state.upozilaDetails);\r\n    const { upozila } = upozilaDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsUnion(unionId));\r\n        dispatch(detailsUpozila(union.upozilaId));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [unionId, union.upozilaId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Upozila</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{union.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Union Code</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{union.unionOrWardCode}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">District</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{upozila.name}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UnionDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\union\\unionEditScreen.jsx",["597"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    updateUnion,\r\n    detailsUnion\r\n} from '../../../actions/Area/unionOrWardActions';\r\n\r\nimport {\r\n    listUpozilas\r\n} from '../../../actions/Area/upozilaActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction UnionEditScreen(props) {\r\n\r\n    const unionId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [unionOrWardCode, setUnionCode] = useState('');\r\n    const [upozilaId, setUpozila] = useState('');\r\n\r\n\r\n    const unionDetails = useSelector((state) => state.unionDetails);\r\n\r\n    const { union } = unionDetails;\r\n\r\n    const upozilaList = useSelector((state) => state.upozilaList);\r\n    const { upozilas } = upozilaList;\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = union;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsUnion(unionId));\r\n        dispatch(listUpozilas());\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateUnion({\r\n                name,\r\n                unionOrWardCode,\r\n                upozilaId\r\n            }, unionId)\r\n        );\r\n        props.history.push(\"/unions\");\r\n    };\r\n    const setUpozilaHandler = (e) => {\r\n        setUpozila(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {upozilas ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Update Union</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        placeholder={union.name}\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"district\">District Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"district\"\r\n                                        id=\"district\"\r\n                                        placeholder={union.unionCode}\r\n                                        size=\"lg\"\r\n                                        value={unionOrWardCode}\r\n                                        onChange={(e) => setUnionCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-6\">\r\n                                <FormGroup>\r\n                                    <Label for=\"upozila\">Upozila</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"upozila\"\r\n                                        id=\"upozila\"\r\n                                        size=\"lg\"\r\n                                        onChange={setUpozilaHandler}\r\n                                    >\r\n                                        <option>Select Division</option>\r\n                                        {upozilas.map((upozila) => (\r\n                                            <option value={upozila.id}>\r\n                                                {upozila.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default UnionEditScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\market\\marketsScreen.jsx",["598"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\n\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { deleteMarket, listMarkets } from \"../../../actions/Area/marketActions\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listUnions } from '../../../actions/Area/unionOrWardActions';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteMarket(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deted category an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst MarketsScreen = (props) => {\r\n\r\n    const marketList = useSelector((state) => state.marketList);\r\n    const { markets } = marketList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // console.clear();\r\n        dispatch(listMarkets());\r\n        dispatch(listUnions());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"marketCode\",\r\n            text: \"Market Code\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"unionOrWard.name\",\r\n            text: \"Union\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        {/* <Link to={\"marketdetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                 Detail\r\n                            </Button>\r\n                        </Link> */}\r\n                        <Link to={\"marketupdate/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {markets ? (\r\n                        <ToolkitProvider\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={markets}\r\n                            columns={columns}\r\n                            defaultSorted={defaultSorted}\r\n                            search\r\n                        >\r\n                            {(props) => (\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Link to=\"/marketcreate\">\r\n                                                <Button color=\"dark\" className=\"mr-2\">\r\n                                                    Create Market\r\n                                        </Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <div className=\"float-right\">\r\n                                                <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        pagination={paginationFactory()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </ToolkitProvider>\r\n                    ) : (\r\n                            <div className=\"text-center\">\r\n                                {props.errorCategoriesList ? (\r\n                                    <h4>{props.errorCategoriesList}</h4>\r\n                                ) : (\r\n                                        <Spinner color=\"dark\" />\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default MarketsScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\marketActions.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\market\\marketCreateScreen.jsx",["599","600","601","602","603"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    saveMarket,\r\n    listMarkets\r\n} from '../../../actions/Area/marketActions';\r\nimport {\r\n    listUnions\r\n} from '../../../actions/Area/unionOrWardActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction MarketCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [marketCode, setMarketCode] = useState('');\r\n    const [unionOrWardId, setUnion] = useState('');\r\n\r\n    const marketSave = useSelector((state) => state.marketSave);\r\n\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = marketSave;\r\n\r\n    const unionDelete = useSelector((state) => state.unionDelete);\r\n\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = unionDelete;\r\n\r\n    const unionList = useSelector((state) => state.unionList);\r\n    const { unions } = unionList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listMarkets());\r\n        dispatch(listUnions());\r\n\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveMarket({\r\n                name,\r\n                marketCode,\r\n                unionOrWardId\r\n            })\r\n        );\r\n        props.history.push(\"/markets\");\r\n    };\r\n    const setUnionHandler = (e) => {\r\n        setUnion(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {unions ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Create Market</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        placeholder=\"Enter division Name\"\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"union\">Market Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"union\"\r\n                                        id=\"union\"\r\n                                        placeholder=\"Enter Union Code\"\r\n                                        size=\"lg\"\r\n                                        value={marketCode}\r\n                                        onChange={(e) => setMarketCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"upozila\">Market</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"upozila\"\r\n                                        id=\"upozila\"\r\n                                        size=\"lg\"\r\n                                        onChange={setUnionHandler}\r\n                                    >\r\n                                        <option>Select Union</option>\r\n                                        {unions.map((union) => (\r\n                                            <option value={union.id}>\r\n                                                {union.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default MarketCreateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\market\\marketDetailsScreen.jsx",["604"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsMarket } from \"../../../actions/Area/marketActions\";\r\nimport { detailsUnion } from \"../../../actions/Area/unionOrWardActions\";\r\n\r\nconst MarketDetails = (props) => {\r\n\r\n    const marketId = props.match.params.id;\r\n\r\n    const marketDetails = useSelector((state) => state.marketDetails);\r\n    const { market } = marketDetails;\r\n\r\n\r\n    const unionDetails = useSelector((state) => state.unionDetails);\r\n    const { union } = unionDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsMarket(marketId));\r\n        dispatch(detailsUnion(union.unionId));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [marketId, union.unionId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Upozila</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{market.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Market Code</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{market.marketCode}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Union</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{union.name}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MarketDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\market\\marketEditScreen.jsx",["605"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    updateMarket,\r\n    detailsMarket\r\n} from '../../../actions/Area/marketActions';\r\nimport {\r\n    listUnions\r\n} from '../../../actions/Area/unionOrWardActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction MarketEditScreen(props) {\r\n\r\n    const marketId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [marketCode, setMarketCode] = useState('');\r\n    const [unionOrWardId, setUnion] = useState('');\r\n\r\n    const marketDetails = useSelector((state) => state.marketDetails);\r\n    const { market } = marketDetails;\r\n\r\n    const unionList = useSelector((state) => state.unionList);\r\n    const { unions } = unionList;\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = market;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(detailsMarket(marketId));\r\n        dispatch(listUnions());\r\n\r\n        setName(market.name)\r\n        setMarketCode(market.marketCode)\r\n        setUnion(market.unionOrWardId)\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [marketId, successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n\r\n        dispatch(\r\n            updateMarket({\r\n                name,\r\n                marketCode,\r\n                unionOrWardId\r\n            }, marketId)\r\n        );\r\n        props.history.push(\"/markets\");\r\n    };\r\n    const setUnionHandler = (e) => {\r\n        setUnion(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {unions ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Update Market</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"marketCcode\">Market Code</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"marketCcode\"\r\n                                        id=\"marketCcode\"\r\n                                        size=\"lg\"\r\n                                        value={marketCode}\r\n                                        onChange={(e) => setMarketCode(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"union\">Union</Label>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        name=\"union\"\r\n                                        id=\"union\"\r\n                                        size=\"lg\"\r\n                                        onChange={setUnionHandler}\r\n                                    >\r\n                                        <option>Select Union</option>\r\n                                        {unions.map((union) => (\r\n                                            <option value={union.id}>\r\n                                                {union.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                    </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default MarketEditScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\service\\config.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\AdminSignUpScreen.jsx",["606"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { adminRegister } from '../../actions/user/accountActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\n\r\n\r\nfunction AdminRegistrationScreen(props) {\r\n\r\n    const [firstname, setFirstName] = useState('');\r\n\r\n    const [mobilenumber, setMobilenumber] = useState('');\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const Register = useSelector(state => state.adminRegistrationReducer);\r\n    const { userinfo } = Register;\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userinfo) {\r\n            props.history.push(redirect);\r\n        }\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [userinfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(adminRegister(\r\n            firstname,\r\n            mobilenumber,\r\n            email,\r\n            password,\r\n            confirmPassword\r\n        ));\r\n        props.history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            {1 && (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>SignUp Admin</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"firstname\"\r\n                                        style={{ color: 'white' }}>First Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"firstname\"\r\n                                        id=\"firstname\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        size=\"lg\"\r\n                                        value={firstname}\r\n                                        onChange={(e) => setFirstName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"countInStock\" style={{ color: 'white' }}>Phone Number</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"mobile_no\"\r\n                                        id=\"mobile_no\"\r\n                                        placeholder=\"Enter Mobile No\"\r\n                                        size=\"lg\"\r\n                                        value={mobilenumber}\r\n                                        onChange={(e) => setMobilenumber(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"email\" style={{ color: 'white' }}>Email</Label>\r\n                                    <Input\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        id=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        size=\"lg\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"firstname\" style={{ color: 'white' }}>Password</Label>\r\n                                    <Input type=\"password\"\r\n                                        name=\"firstname\"\r\n                                        id=\"firstname\"\r\n                                        placeholder=\"Enter Password\"\r\n                                        size=\"lg\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"lastname\" style={{ color: 'white' }}>Confirm Password</Label>\r\n                                    <Input type=\"password\"\r\n                                        name=\"price\"\r\n                                        id=\"price\"\r\n                                        placeholder=\"Enter Confirm Password\"\r\n                                        size=\"lg\"\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                            <div className=\"col col-lg-12\">\r\n                                <Button\r\n                                    style={{\r\n                                        color: \"#1FC46C\",\r\n                                        backgroundColor: \"#fff\"\r\n                                    }}\r\n                                    outline color=\"success\" size=\"lg\" block type=\"submit\">\r\n                                    Sign Up\r\n                                </Button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n}\r\nexport default AdminRegistrationScreen;\r\n\r\n\r\n\r\n\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\user\\accountActions.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\Role\\RolesScreen.jsx",["607"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\n\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    listRoles,\r\n    deleteRole\r\n} from '../../../actions/user/roleActions';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteRole(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deleted Role an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst RolesScreen = (props) => {\r\n\r\n    const roleList = useSelector((state) => state.roleList);\r\n    const { roles } = roleList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listRoles());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"description\",\r\n            text: \"Description\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        <Link to={\"roledetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={\"roleupdate/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {roles ? (\r\n                <ToolkitProvider\r\n                    bootstrap4\r\n                    keyField=\"id\"\r\n                    data={roles}\r\n                    columns={columns}\r\n                    defaultSorted={defaultSorted}\r\n                    search\r\n                >\r\n                    {(props) => (\r\n                        <div>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Link to=\"/rolecreate\">\r\n                                        <Button color=\"dark\" className=\"mr-2\">\r\n                                            Create Role\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"float-right\">\r\n                                        <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                pagination={paginationFactory()}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </ToolkitProvider>\r\n            ) : (\r\n                    <div className=\"text-center\">\r\n                        {props.errorCategoriesList ? (\r\n                            <h4>{props.errorCategoriesList}</h4>\r\n                        ) : (\r\n                                <Spinner color=\"dark\" />\r\n                            )}\r\n                    </div>\r\n                )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RolesScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\Role\\RoleCreateScreen.jsx",["608","609","610","611","612","613"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    saveRole,\r\n    listRoles\r\n} from '../../../actions/user/roleActions';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction RoleCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const roleSave = useSelector((state) => state.roleSave);\r\n\r\n    const roleList = useSelector((state) => state.roleList);\r\n    const { roles } = roleList;\r\n\r\n\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = roleSave;\r\n\r\n    const roleDelete = useSelector((state) => state.roleDelete);\r\n\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = roleDelete;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listRoles());\r\n\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveRole({\r\n                name,\r\n                description\r\n            })\r\n        );\r\n        props.history.push(\"/roles\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {1 ? (\r\n                <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                    <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Create Role</h1>\r\n                    <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"name\">Name</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"name\"\r\n                                        id=\"name\"\r\n                                        placeholder=\"Enter Role Name\"\r\n                                        size=\"lg\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-lg-12\">\r\n                                <FormGroup>\r\n                                    <Label for=\"union\">Desription</Label>\r\n                                    <Input type=\"text\"\r\n                                        name=\"union\"\r\n                                        id=\"union\"\r\n                                        placeholder=\"Enter Role Desription\"\r\n                                        size=\"lg\"\r\n                                        value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                </Button>\r\n                    </Form>\r\n                </div>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default RoleCreateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\Role\\RoleUpdateScreen.jsx",["614"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    updateRole,\r\n    detailsRole\r\n} from '../../../actions/user/roleActions';\r\n\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction RoleUpdateScreen(props) {\r\n\r\n    const roleId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n    const roleDetails = useSelector((state) => state.roleDetails);\r\n\r\n    const { role } = roleDetails;\r\n\r\n\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = role;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsRole(roleId));\r\n        setName(role.name)\r\n        setDescription(role.description)\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateRole({\r\n                name,\r\n                description\r\n            }, roleId)\r\n        );\r\n        props.history.push(\"/roles\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {role ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"district\">Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"district\"\r\n                                    id=\"district\"\r\n                                    placeholder={role.unionCode}\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default RoleUpdateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\Role\\RoleDetailsScreen.jsx",["615"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsRole } from '../../../actions/user/roleActions';\r\n\r\nconst RoleDetails = (props) => {\r\n\r\n    const roleId = props.match.params.id;\r\n\r\n    const roleDetails = useSelector((state) => state.roleDetails);\r\n    const { role } = roleDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsRole(roleId));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [roleId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Upozila</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{role.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Description</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{role.description}</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RoleDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\user\\roleActions.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\SignInScreen.jsx",["616"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { signIn } from '../../actions/user/accountActions';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction SigninScreen(props) {\r\n\r\n\r\n    const [mobilenumber, setMobilenumber] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const userSignIn = useSelector(state => state.userSignIn);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(signIn(mobilenumber, password));\r\n\r\n        props.history.push(\"/\");\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\" style={{ backgroundColor: \"#fff\" }}>\r\n            <br />\r\n            <div className=\"container\" style={{ width: 475, height: 800, marginTop: 60, backgroundColor: \"#fff\" }}>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Sign In</h1>\r\n                <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                <Form\r\n\r\n                    onSubmit={submitHandler}\r\n                >\r\n                    <div\r\n\r\n                        style={{ alignItems: \"center\", justifyContent: \"center\", textAlign: \"center\" }}\r\n                    >\r\n                        <FormGroup >\r\n                            <Label\r\n                                for=\"name\"\r\n                                style={{ color: \"#1FC46C\" }}\r\n                            >\r\n                                Phone Number\r\n                                    </Label>\r\n                            <Input\r\n                                \r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                               \r\n                                placeholder=\"Enter Your Phone Number\"\r\n                                size=\"lg\"\r\n                                value={mobilenumber}\r\n                                onChange={(e) => setMobilenumber(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup >\r\n                            <Label\r\n                                for=\"password\"\r\n                                style={{ color: \"#1FC46C\" }}\r\n                            >\r\n                                Password\r\n                                    </Label>\r\n                            <Input\r\n                              \r\n                                type=\"password\"\r\n                                name=\"name\"\r\n\r\n                                placeholder=\"Enter Password\"\r\n                                size=\"lg\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <Button\r\n                        style={{\r\n                            color: \"#1FC46C\",\r\n                            backgroundColor: \"#fff\"\r\n                        }}\r\n                        outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                        SignIn\r\n                    </Button>\r\n                    <Button\r\n                        style={{\r\n                            color: \"#1FC46C\",\r\n                            backgroundColor: \"#fff\"\r\n                        }}\r\n                        outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                        <a href=\"/signup\">Create New Account?</a>\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nexport default SigninScreen;","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\FarmerSignUpScreen.jsx",["617","618"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from 'react-bootstrap'\r\nimport { farmerRegister } from '../../actions/user/accountActions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { listDivisions } from '../../actions/Area/divisionActions';\r\nimport { listDistricts } from '../../actions/Area/districtActions';\r\nimport { listUpozilas } from '../../actions/Area/upozilaActions';\r\nimport { listUnions } from '../../actions/Area/unionOrWardActions';\r\nimport { listMarkets } from '../../actions/Area/marketActions';\r\nimport base from '../../service/config'\r\n\r\nfunction FarmerSignUpScreen(props) {\r\n\r\n    const [firstname, setFirstName] = useState('');\r\n    const [lastname, setLastName] = useState('');\r\n    const [mobilenumber, setMobilenumber] = useState('');\r\n    const [postalcode, setPostalCode] = useState('');\r\n    const [profilePhoto, setProfilePhoto] = useState('');\r\n    const [divisionId, setDivision] = useState('');\r\n    const [districtId, setDistrict] = useState('');\r\n    const [upozilaId, setUpozila] = useState('');\r\n    const [unionOrWardId, setUnion] = useState('');\r\n    const [marketId, setMarket] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    // const [setUploading] = useState(false);\r\n\r\n\r\n    const Register = useSelector(state => state.farmerRegistrationReducer);\r\n    const { userInfo } = Register;\r\n\r\n    const divisionList = useSelector(state => state.divisionList)\r\n    const { divisions } = divisionList\r\n\r\n    const divisionDetails = useSelector((state) => state.divisionDetails);\r\n    const { division } = divisionDetails;\r\n\r\n    const districtList = useSelector(state => state.districtList)\r\n    const { districts } = districtList\r\n\r\n    const districtDetails = useSelector((state) => state.districtDetails);\r\n    const { district } = districtDetails;\r\n\r\n    const upozilaList = useSelector(state => state.upozilaList)\r\n    const { upozilas } = upozilaList\r\n\r\n    const upozilaDetails = useSelector((state) => state.upozilaDetails);\r\n    const { upozila } = upozilaDetails;\r\n\r\n    const unionList = useSelector(state => state.unionList)\r\n    const { unions } = unionList\r\n\r\n    const unionDetails = useSelector((state) => state.unionDetails);\r\n    const { union } = unionDetails;\r\n\r\n    const marketList = useSelector(state => state.marketList)\r\n    const { markets } = marketList\r\n\r\n    const marketDetails = useSelector((state) => state.marketDetails);\r\n    const { market } = marketDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            props.history.push(redirect);\r\n        }\r\n\r\n        dispatch(listDivisions())\r\n        dispatch(listDistricts())\r\n        dispatch(listUpozilas())\r\n        dispatch(listUnions())\r\n        dispatch(listMarkets())\r\n        return () => {\r\n            //\r\n        };\r\n    }, [userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        dispatch(farmerRegister(\r\n\r\n            firstname,\r\n            lastname,\r\n            profilePhoto,\r\n            mobilenumber,\r\n            divisionId,\r\n            districtId,\r\n            upozilaId,\r\n            unionOrWardId,\r\n            marketId,\r\n            password,\r\n            confirmPassword\r\n        ));\r\n\r\n        props.history.push(\"/\");\r\n    }\r\n\r\n    const uploadFileHandler = (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('profilePhoto', file);\r\n        setUploading(true);\r\n        axios\r\n            .post(base + '/api/Authentication/savephoto', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setProfilePhoto(response.data);\r\n                setUploading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setUploading(false);\r\n            });\r\n    };\r\n\r\n\r\n    const saveDivisionHandler = (e) => {\r\n        setDivision(e.target.value);\r\n    }\r\n    const saveDistrictHandler = (e) => {\r\n        setDistrict(e.target.value);\r\n    }\r\n    const saveUpozilaHandler = (e) => {\r\n        setUpozila(e.target.value);\r\n    }\r\n    const saveUnionHandler = (e) => {\r\n        setUnion(e.target.value)\r\n    }\r\n    const saveMarketHandler = (e) => {\r\n        setMarket(e.target.value)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            {divisions && districts && upozilas && unions && markets && (\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <Card style={{ color: \"#1FC46C\", backgroundColor: \"#fff\", borderColor: \"#1FC46C\", padding: \"20px\" }}>\r\n                            <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                            <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>Farmer Sign_Up</h1>\r\n                            <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                            <Form onSubmit={submitHandler}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"firstname\">First Name</Label>\r\n                                            <Input type=\"text\"\r\n                                                name=\"firstname\"\r\n                                                id=\"firstname\"\r\n                                                placeholder=\"Enter Firstname\"\r\n                                                size=\"lg\"\r\n                                                value={firstname}\r\n                                                onChange={(e) => setFirstName(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"lastname\">Last Name</Label>\r\n                                            <Input type=\"text\"\r\n                                                name=\"lastName\"\r\n                                                id=\"lastName\"\r\n                                                placeholder=\"Enter LastName\"\r\n                                                size=\"lg\"\r\n                                                value={lastname}\r\n                                                onChange={(e) => setLastName(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"countInStock\">Phone Number</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"phonenumber\"\r\n                                                id=\"phonenumber\"\r\n                                                placeholder=\"Enter Phone Number\"\r\n                                                size=\"lg\"\r\n                                                value={mobilenumber}\r\n                                                onChange={(e) => setMobilenumber(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"countInStock\">Postal Code</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"productCode\"\r\n                                                id=\"productCode\"\r\n                                                placeholder=\"Enter Product Code\"\r\n                                                size=\"lg\"\r\n                                                value={postalcode}\r\n                                                onChange={(e) => setPostalCode(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-12\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"image\">Phofile Photo Name</Label>\r\n                                            <Input type=\"text\"\r\n                                                name=\"image\"\r\n                                                id=\"image\"\r\n                                                placeholder=\"Image Name\"\r\n                                                size=\"lg\"\r\n                                                value={profilePhoto}\r\n                                                onChange={(e) => setProfilePhoto(e.target.value)}\r\n                                            />\r\n                                            <Input\r\n                                                type=\"file\"\r\n                                                onChange={uploadFileHandler}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select Division</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={division.name}\r\n                                                onChange={saveDivisionHandler}\r\n                                            >\r\n                                                <option>Select Division</option>\r\n                                                {divisions.map((division) => (\r\n                                                    <option value={division.id}>\r\n                                                        {division.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select District</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={district.name}\r\n                                                onChange={saveDistrictHandler}\r\n                                            >\r\n                                                <option>Select District</option>\r\n                                                {districts.map((district) => (\r\n\r\n                                                    <option value={district.id}>\r\n                                                        {district.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select Upozila</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={upozila.name}\r\n                                                onChange={saveUpozilaHandler}\r\n                                            >\r\n                                                <option>Select Upozila</option>\r\n                                                {upozilas.map((upozila) => (\r\n                                                    <option value={upozila.id}>\r\n                                                        {upozila.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select Union</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={union.name}\r\n                                                onChange={saveUnionHandler}\r\n                                            >\r\n                                                <option>Select Union</option>\r\n                                                {unions.map((union) => (\r\n\r\n                                                    <option value={union.id}>\r\n                                                        {union.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select Union</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={market.name}\r\n                                                onChange={saveMarketHandler}\r\n                                            >\r\n                                                <option>Select Market</option>\r\n                                                {markets.map((union) => (\r\n\r\n                                                    <option value={union.id}>\r\n                                                        {union.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup >\r\n                                            <Label\r\n                                                for=\"password\"\r\n                                                style={{ color: \"#000\" }}\r\n                                            >\r\n                                                New Password\r\n                                                </Label>\r\n                                            <Input\r\n                                                style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                type=\"password\"\r\n                                                name=\"newPassword\"\r\n                                                color=\"06E2FF\"\r\n                                                placeholder=\"Enter Password\"\r\n                                                size=\"lg\"\r\n                                                value={password}\r\n                                                onChange={(e) => setPassword(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup >\r\n                                            <Label\r\n                                                for=\"password\"\r\n                                                style={{ color: \"#000\" }}\r\n                                            >\r\n                                                Confirm Password\r\n                                                </Label>\r\n                                            <Input\r\n                                                style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                type=\"password\"\r\n                                                name=\"confirmPassword\"\r\n                                                color=\"06E2FF\"\r\n                                                placeholder=\"Re-EnterPassword\"\r\n                                                size=\"lg\"\r\n                                                value={confirmPassword}\r\n                                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Submit\r\n                       </Button>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </div>\r\n\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n}\r\nexport default FarmerSignUpScreen;\r\n\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\WholeSellerSignUpScreen.jsx",["619","620"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from 'react-bootstrap'\r\nimport { holesellerRegister } from '../../actions/user/accountActions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { listDivisions } from '../../actions/Area/divisionActions';\r\nimport { listDistricts } from '../../actions/Area/districtActions';\r\nimport { listUpozilas } from '../../actions/Area/upozilaActions';\r\nimport { listUnions } from '../../actions/Area/unionOrWardActions';\r\nimport { listMarkets } from '../../actions/Area/marketActions';\r\nimport base from '../../service/config'\r\n\r\nfunction WholeSellerSignUpScreen(props) {\r\n\r\n    const [firstname, setFirstName] = useState('');\r\n    const [lastname, setLastName] = useState('');\r\n    const [mobilenumber, setMobilenumber] = useState('');\r\n    const [postalcode, setPostalCode] = useState('');\r\n    const [profilePhoto, setProfilePhoto] = useState('');\r\n    const [divisionId, setDivision] = useState('');\r\n    const [districtId, setDistrict] = useState('');\r\n    const [upozilaId, setUpozila] = useState('');\r\n    const [unionOrWardId, setUnion] = useState('');\r\n    const [marketId, setMarket] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    // const [setUploading] = useState(false);\r\n\r\n\r\n    const Register = useSelector(state => state.farmerRegistrationReducer);\r\n    const { userInfo } = Register;\r\n\r\n    const divisionList = useSelector(state => state.divisionList)\r\n    const { divisions } = divisionList\r\n\r\n    const divisionDetails = useSelector((state) => state.divisionDetails);\r\n    const { division } = divisionDetails;\r\n\r\n    const districtList = useSelector(state => state.districtList)\r\n    const { districts } = districtList\r\n\r\n    const districtDetails = useSelector((state) => state.districtDetails);\r\n    const { district } = districtDetails;\r\n\r\n    const upozilaList = useSelector(state => state.upozilaList)\r\n    const { upozilas } = upozilaList\r\n\r\n    const upozilaDetails = useSelector((state) => state.upozilaDetails);\r\n    const { upozila } = upozilaDetails;\r\n\r\n    const unionList = useSelector(state => state.unionList)\r\n    const { unions } = unionList\r\n\r\n    const unionDetails = useSelector((state) => state.unionDetails);\r\n    const { union } = unionDetails;\r\n\r\n    const marketList = useSelector(state => state.marketList)\r\n    const { markets } = marketList\r\n\r\n    const marketDetails = useSelector((state) => state.marketDetails);\r\n    const { market } = marketDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            props.history.push(redirect);\r\n        }\r\n\r\n        dispatch(listDivisions())\r\n        dispatch(listDistricts())\r\n        dispatch(listUpozilas())\r\n        dispatch(listUnions())\r\n        dispatch(listMarkets())\r\n        return () => {\r\n            //\r\n        };\r\n    }, [userInfo]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        dispatch(holesellerRegister(\r\n\r\n            firstname,\r\n            lastname,\r\n            profilePhoto,\r\n            mobilenumber,\r\n            divisionId,\r\n            districtId,\r\n            upozilaId,\r\n            unionOrWardId,\r\n            marketId,\r\n            password,\r\n            confirmPassword\r\n        ));\r\n        props.history.push(\"/\");\r\n    }\r\n\r\n    const uploadFileHandler = (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('profilePhoto', file);\r\n        setUploading(true);\r\n        axios\r\n            .post(base + '/api/Authentication/savephoto', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setProfilePhoto(response.data);\r\n                setUploading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setUploading(false);\r\n            });\r\n    };\r\n\r\n\r\n    const saveDivisionHandler = (e) => {\r\n        setDivision(e.target.value);\r\n    }\r\n    const saveDistrictHandler = (e) => {\r\n        setDistrict(e.target.value);\r\n    }\r\n    const saveUpozilaHandler = (e) => {\r\n        setUpozila(e.target.value);\r\n    }\r\n    const saveUnionHandler = (e) => {\r\n        setUnion(e.target.value)\r\n    }\r\n    const saveMarketHandler = (e) => {\r\n        setMarket(e.target.value)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            {divisions && districts && upozilas && unions && markets && (\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <Card style={{ color: \"#1FC46C\", backgroundColor: \"#fff\", borderColor: \"#1FC46C\", padding: \"20px\" }}>\r\n                            <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                            <h1 style={{ color: \"#1FC46C\", textAlign: \"center\" }}>WholeSeller Sign_Up</h1>\r\n                            <p style={{ color: \"#1FC46C\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                            <Form onSubmit={submitHandler}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"firstname\">First Name</Label>\r\n                                            <Input type=\"text\"\r\n                                                name=\"firstname\"\r\n                                                id=\"firstname\"\r\n                                                placeholder=\"Enter Firstname\"\r\n                                                size=\"lg\"\r\n                                                value={firstname}\r\n                                                onChange={(e) => setFirstName(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"lastname\">Last Name</Label>\r\n                                            <Input type=\"text\"\r\n                                                name=\"lastName\"\r\n                                                id=\"lastName\"\r\n                                                placeholder=\"Enter LastName\"\r\n                                                size=\"lg\"\r\n                                                value={lastname}\r\n                                                onChange={(e) => setLastName(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"countInStock\">Phone Number</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"phonenumber\"\r\n                                                id=\"phonenumber\"\r\n                                                placeholder=\"Enter Phone Number\"\r\n                                                size=\"lg\"\r\n                                                value={mobilenumber}\r\n                                                onChange={(e) => setMobilenumber(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"countInStock\">Postal Code</Label>\r\n                                            <Input\r\n                                                type=\"text\"\r\n                                                name=\"productCode\"\r\n                                                id=\"productCode\"\r\n                                                placeholder=\"Enter Product Code\"\r\n                                                size=\"lg\"\r\n                                                value={postalcode}\r\n                                                onChange={(e) => setPostalCode(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-12\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"image\">Phofile Photo Name</Label>\r\n                                            <Input type=\"text\"\r\n                                                name=\"image\"\r\n                                                id=\"image\"\r\n                                                placeholder=\"Image Name\"\r\n                                                size=\"lg\"\r\n                                                value={profilePhoto}\r\n                                                onChange={(e) => setProfilePhoto(e.target.value)}\r\n                                            />\r\n                                            <Input\r\n                                                type=\"file\"\r\n                                                onChange={uploadFileHandler}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select Division</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={division.name}\r\n                                                onChange={saveDivisionHandler}\r\n                                            >\r\n                                                <option>Select Division</option>\r\n                                                {divisions.map((division) => (\r\n                                                    <option value={division.id}>\r\n                                                        {division.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select District</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={district.name}\r\n                                                onChange={saveDistrictHandler}\r\n                                            >\r\n                                                <option>Select District</option>\r\n                                                {districts.map((district) => (\r\n\r\n                                                    <option value={district.id}>\r\n                                                        {district.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select Upozila</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={upozila.name}\r\n                                                onChange={saveUpozilaHandler}\r\n                                            >\r\n                                                <option>Select Upozila</option>\r\n                                                {upozilas.map((upozila) => (\r\n                                                    <option value={upozila.id}>\r\n                                                        {upozila.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select Union</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={union.name}\r\n                                                onChange={saveUnionHandler}\r\n                                            >\r\n                                                <option>Select Union</option>\r\n                                                {unions.map((union) => (\r\n\r\n                                                    <option value={union.id}>\r\n                                                        {union.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup>\r\n                                            <Label for=\"exampleSelect\">Select Union</Label>\r\n                                            <Input\r\n                                                type=\"select\"\r\n                                                name=\"select\"\r\n                                                id=\"exampleSelect\"\r\n                                                size=\"lg\"\r\n                                                defaultValue={market.name}\r\n                                                onChange={saveMarketHandler}\r\n                                            >\r\n                                                <option>Select Market</option>\r\n                                                {markets.map((union) => (\r\n\r\n                                                    <option value={union.id}>\r\n                                                        {union.name}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Input>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup >\r\n                                            <Label\r\n                                                for=\"password\"\r\n                                                style={{ color: \"#000\" }}\r\n                                            >\r\n                                                New Password\r\n                                                </Label>\r\n                                            <Input\r\n                                                style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                type=\"password\"\r\n                                                name=\"newPassword\"\r\n                                                color=\"06E2FF\"\r\n                                                placeholder=\"Enter Password\"\r\n                                                size=\"lg\"\r\n                                                value={password}\r\n                                                onChange={(e) => setPassword(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n\r\n                                    <div className=\"col col-lg-6\">\r\n                                        <FormGroup >\r\n                                            <Label\r\n                                                for=\"password\"\r\n                                                style={{ color: \"#000\" }}\r\n                                            >\r\n                                                Confirm Password\r\n                                                </Label>\r\n                                            <Input\r\n                                                style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                type=\"password\"\r\n                                                name=\"confirmPassword\"\r\n                                                color=\"06E2FF\"\r\n                                                placeholder=\"Re-EnterPassword\"\r\n                                                size=\"lg\"\r\n                                                value={confirmPassword}\r\n                                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Submit\r\n                       </Button>\r\n\r\n                            </Form>\r\n                        </Card>\r\n                    </div>\r\n\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n}\r\nexport default WholeSellerSignUpScreen;\r\n\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scategory\\sCaregoriesScreen.jsx",["621"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    listCategories,\r\n    deleteCategory\r\n} from '../../../actions/shop/scategoryAction';\r\n\r\n\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(deleteCategory(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deted SubCategory an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst CategorySScreen = (props) => {\r\n\r\n    const CategoryList = useSelector((state) => state.scategoryListReducer);\r\n    const { categories } = CategoryList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listCategories());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"description\",\r\n            text: \"Description\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        {/* <Link to={\"scategorydetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link> */}\r\n                        <Link to={\"scategoryedit/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {categories ? (\r\n                        <ToolkitProvider\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={categories}\r\n                            columns={columns}\r\n                            defaultSorted={defaultSorted}\r\n                            search\r\n                        >\r\n                            {(props) => (\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Link to=\"/scategorycreate\">\r\n                                                <Button color=\"dark\" className=\"mr-2\">\r\n                                                    Create Category\r\n                                        </Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <div className=\"float-right\">\r\n                                                <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        pagination={paginationFactory()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </ToolkitProvider>\r\n                    ) : (\r\n                            <div className=\"text-center\">\r\n                                {props.errorCategoriesList ? (\r\n                                    <h4>{props.errorCategoriesList}</h4>\r\n                                ) : (\r\n                                        <Spinner color=\"dark\" />\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n            </div>\r\n           \r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CategorySScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scategory\\sCategoryCreateScreen.jsx",["622","623"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    saveCategory,\r\n    listCategories\r\n} from '../../../actions/shop/scategoryAction';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction CategoryCreateSScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const CategorySave = useSelector((state) => state.scategorySaveReducer);\r\n\r\n    const CategoryList = useSelector((state) => state.scategoryListReducer);\r\n    const { categories } = CategoryList;\r\n\r\n\r\n    const {\r\n\r\n        success: successSave\r\n\r\n    } = CategorySave;\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listCategories());\r\n\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveCategory({\r\n                name,\r\n                description\r\n            })\r\n        );\r\n        props.history.push('/scategories/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {categories ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n\r\n                        </div>\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    placeholder=\"Enter Category Name\"\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"union\">Category Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"union\"\r\n                                    id=\"union\"\r\n                                    placeholder=\"Enter Category Description\"\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CategoryCreateSScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scategory\\sCategoryDetails.jsx",["624"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { detailsCategory } from '../../../actions/shop/scategoryAction';\r\n\r\nconst CategorySDetails = (props) => {\r\n\r\n    const categoryId = props.match.params.id;\r\n\r\n    const CategoryDetails = useSelector((state) => state.scategoryDetailsReducer);\r\n    const { category } = CategoryDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsCategory(categoryId));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [categoryId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Category</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{category.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Description</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{category.description}</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategorySDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scategory\\sCategoryUpdate.jsx",["625"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    detailsCategory,\r\n    updateCategory\r\n} from '../../../actions/shop/scategoryAction';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction CategorySUpdateScreen(props) {\r\n\r\n    const categoryId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const CategoryDetails = useSelector((state) => state.scategoryDetailsReducer);\r\n\r\n    const { category } = CategoryDetails;\r\n\r\n\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = category;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsCategory(categoryId));\r\n        setName(category.name)\r\n        setDescription(category.description)\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateCategory({\r\n                name,\r\n                description\r\n            }, categoryId)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {category ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"district\">Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"district\"\r\n                                    id=\"district\"\r\n                                    placeholder={category.description}\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CategorySUpdateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\shop\\scategoryAction.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcategory\\bCategoriesScreen.jsx",["626"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    blistCategories,\r\n    bdeleteCategory\r\n} from '../../../actions/business/bcategoryAction';\r\n\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    swal({\r\n        title: \"Do you want to delete?\",\r\n        icon: \"warning\",\r\n        buttons: true,\r\n        dangerMode: true,\r\n    })\r\n        .then((willDelete) => {\r\n            if (willDelete) {\r\n                dispatch(bdeleteCategory(id))\r\n                swal(\"SuccessFully Deleted\", {\r\n                    icon: \"success\",\r\n                });\r\n            } else {\r\n                swal(\"Can Not deted SubCategory an Error occured\");\r\n            }\r\n        });\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst CategoryBScreen = (props) => {\r\n\r\n    const CategoryList = useSelector((state) => state.bcategoryListReducer);\r\n    const { categories } = CategoryList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(blistCategories());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"description\",\r\n            text: \"Description\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        {/* <Link to={\"scategorydetails/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link> */}\r\n                        <Link to={\"scategoryedit/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    {categories ? (\r\n                        <ToolkitProvider\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={categories}\r\n                            columns={columns}\r\n                            defaultSorted={defaultSorted}\r\n                            search\r\n                        >\r\n                            {(props) => (\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Link to=\"/scategorycreate\">\r\n                                                <Button color=\"dark\" className=\"mr-2\">\r\n                                                    Create Category\r\n                                        </Button>\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <div className=\"float-right\">\r\n                                                <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        pagination={paginationFactory()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </ToolkitProvider>\r\n                    ) : (\r\n                            <div className=\"text-center\">\r\n                                {props.errorCategoriesList ? (\r\n                                    <h4>{props.errorCategoriesList}</h4>\r\n                                ) : (\r\n                                        <Spinner color=\"dark\" />\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CategoryBScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\business\\bcategoryAction.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcategory\\bCategoryDetailsScreen.jsx",["627","628"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    bsaveCategory,\r\n    blistCategories\r\n} from '../../../actions/business/bcategoryAction';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction CategoryCreateBScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const CategorySave = useSelector((state) => state.bcategorySaveReducer);\r\n\r\n    const CategoryList = useSelector((state) => state.bcategoryListReducer);\r\n    const { categories } = CategoryList;\r\n\r\n\r\n    const {\r\n\r\n        success: successSave\r\n\r\n    } = CategorySave;\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(blistCategories());\r\n\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            bsaveCategory({\r\n                name,\r\n                description\r\n            })\r\n        );\r\n        props.history.push('/scategories/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {categories ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-3\">\r\n\r\n                        </div>\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    placeholder=\"Enter Category Name\"\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"union\">Category Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"union\"\r\n                                    id=\"union\"\r\n                                    placeholder=\"Enter Category Description\"\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CategoryCreateBScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcategory\\bCategoryScreen.jsx",["629"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nimport { bdetailsCategory } from '../../../actions/business/bcategoryAction';\r\n\r\nconst CategoryBDetails = (props) => {\r\n\r\n    const categoryId = props.match.params.id;\r\n\r\n    const CategoryDetails = useSelector((state) => state.bcategoryDetailsReducer);\r\n    const { category } = CategoryDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(bdetailsCategory(categoryId));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [categoryId]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n                <div className=\"col col-lg-6\">\r\n                    <h2>Category</h2>\r\n                    <Table striped>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td width=\"200\">Name</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{category.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td width=\"200\">Description</td>\r\n                                <td width=\"10\">:</td>\r\n                                <td>{category.description}</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <div className=\"col col-lg-3\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryBDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcategory\\bCategoryUpdate.jsx",["630"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    bdetailsCategory,\r\n    bupdateCategory\r\n} from '../../../actions/business/bcategoryAction';\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction CategoryBUpdateScreen(props) {\r\n\r\n    const categoryId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const CategoryDetails = useSelector((state) => state.bcategoryDetailsReducer);\r\n    const { category } = CategoryDetails;\r\n\r\n\r\n\r\n    const {\r\n        success: successUpdate\r\n    } = category;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(bdetailsCategory(categoryId));\r\n        setName(category.name)\r\n        setDescription(category.description)\r\n        return () => {\r\n\r\n            //\r\n        };\r\n    }, [successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            bupdateCategory({\r\n                name,\r\n                description\r\n            }, categoryId)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {category ? (\r\n                <Form onSubmit={submitHandler}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"name\">Name</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n\r\n                                    size=\"lg\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col col-lg-6\">\r\n                            <FormGroup>\r\n                                <Label for=\"district\">Description</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"district\"\r\n                                    id=\"district\"\r\n                                    placeholder={category.description}\r\n                                    size=\"lg\"\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                </Button>\r\n                </Form>\r\n            ) :\r\n                <h1>Error</h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default CategoryBUpdateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentHomeScreen.jsx",["631"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listinstruments } from '../../../actions/shop/sinstrumentAction';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport base from '../../../service/config';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction InstrumentHomeScreen(props) {\r\n\r\n    const category = props.match.params.id ? props.match.params.id : '';\r\n\r\n    const productList = useSelector((state) => state.sinstrumentListReducer);\r\n    const { instruments } = productList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listinstruments(category));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [category]);\r\n    console.log(instruments);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {instruments ? (\r\n                    <div className=\"row\">\r\n                        {instruments.map((product) => (\r\n                            <div className=\"col-3\">\r\n                                <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                    <div className=\"row\">\r\n                                        <Link to={'/instrumentsdetails/' + product.id}>\r\n                                            <Card.Img variant=\"top\" height=\"200px\" src={base + product.imageUrl1} />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <Card.Body>\r\n                                            <p style={{ color: \"#06E2FF\" }}>_________________________________</p>\r\n                                            <ListGroup className=\"list-group-flush\">\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                            </ListGroup>\r\n                                        </Card.Body>\r\n                                    </div>\r\n\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                        <h1>Empty</h1>\r\n                    )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default InstrumentHomeScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentCreateScren.jsx",["632"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    saveinstrument,\r\n    listinstruments,\r\n} from '../../../actions/shop/sinstrumentAction';\r\nimport { Button, Form, FormGroup, Input, Label, Card } from 'reactstrap';\r\nimport { listCategories } from '../../../actions/shop/scategoryAction';\r\nimport base from '../../../service/config';\r\n\r\nfunction InstrumentCreateScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [imageUrl1, setImageUrl1] = useState('');\r\n    const [instrumentCategoryId, setInstrumentCategory] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const productSave = useSelector((state) => state.sinstrumentSaveReducer);\r\n    const {\r\n\r\n        success: successSave,\r\n\r\n    } = productSave;\r\n\r\n    const productDelete = useSelector((state) => state.sinstrumentDeleteReducer);\r\n    const {\r\n\r\n        success: successDelete,\r\n\r\n    } = productDelete;\r\n\r\n    const categoryList = useSelector((state) => state.scategoryListReducer);\r\n    const { categories } = categoryList;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listinstruments());\r\n        dispatch(listCategories());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveinstrument({\r\n                name,\r\n                price,\r\n                imageUrl1,\r\n                instrumentCategoryId,\r\n                quantity,\r\n                description,\r\n            })\r\n        );\r\n        // props.history.push('/productsadmin') \r\n    };\r\n    const saveCatHandler = (e) => {\r\n        setInstrumentCategory(e.target.value);\r\n    }\r\n\r\n\r\n    const uploadFileHandler = (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('imageUrl', file);\r\n\r\n        axios\r\n            .post(base + '/api/instruments/savephoto', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setImageUrl1(response.data);\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"container\" style={{ justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\" }}>\r\n            <br />\r\n\r\n            {categories && (\r\n\r\n                <div className=\"container\" style={{ width: 850, backgroundColor: \"#fff\" }}>\r\n                    <Card style={{ borderColor: \"#000\" }}>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <h1 style={{ color: \"#000\", textAlign: \"center\" }}>Instrument Upload</h1>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <Form onSubmit={submitHandler}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"name\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Name\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            color=\"06E2FF\"\r\n                                            placeholder=\"Enter Product Name\"\r\n                                            size=\"lg\"\r\n                                            value={name}\r\n                                            required\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"price\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Price\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"price\"\r\n                                            id=\"price\"\r\n                                            placeholder=\"Enter Product Price\"\r\n                                            size=\"lg\"\r\n                                            value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n\r\n\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"countInStock\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            In Stock\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"countInStock\"\r\n                                            id=\"countInStock\"\r\n                                            placeholder=\"Enter Count in Stock\"\r\n                                            size=\"lg\"\r\n                                            value={quantity}\r\n                                            onChange={(e) => setQuantity(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleSelect\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Category\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"select\"\r\n                                            name=\"select\"\r\n                                            id=\"exampleSelect\"\r\n                                            size=\"lg\"\r\n                                            onChange={saveCatHandler}\r\n                                        >\r\n                                            <option>Select Category</option>\r\n                                            {categories.map((category) => (\r\n                                                <option value={category.id}>\r\n                                                    {category.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"image\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Image Name\r\n                                    </Label>\r\n\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"image\"\r\n                                            id=\"image\"\r\n                                            placeholder=\"Image Name\"\r\n                                            size=\"lg\"\r\n                                            value={imageUrl1}\r\n                                            onChange={(e) => setImageUrl1(e.target.value)}\r\n                                        />\r\n                                        <Input\r\n                                            style={{ color: \"#06E2FF\", backgroundColor: \"#fff\" }}\r\n                                            type=\"file\"\r\n                                            label=\"Yo, pick a file!\"\r\n                                            onChange={uploadFileHandler}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleText\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Description\r\n                                        </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"textarea\"\r\n                                            name=\"text\"\r\n                                            id=\"exampleText\"\r\n                                            placeholder=\"Enter Product Discription\"\r\n                                            size=\"lg\"\r\n                                            value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Button style={{\r\n                                color: \"#06E2FF\"\r\n                            }} outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                                Submit\r\n                       </Button>\r\n\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n            }\r\n            <br />\r\n            <br />\r\n        </div >\r\n    );\r\n}\r\nexport default InstrumentCreateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentDetailsScreen.jsx",["633","634"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { detailsinstrument } from '../../../actions/shop/sinstrumentAction';\r\nimport { Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap'\r\nimport { Input } from 'reactstrap';\r\nimport base from '../../../service/config';\r\n\r\nfunction InstrumentDetailsScreen(props) {\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const productDetails = useSelector((state) => state.sinstrumentDetailsReducer);\r\n    const { instrument } = productDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsinstrument(props.match.params.id));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [props.match.params.id]);\r\n\r\n\r\n    const handleAddToCart = () => {\r\n\r\n        props.history.push('/scart/' + props.match.params.id + '?qty=' + qty);\r\n    };\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { instrument ? (\r\n            <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <Card.Body>\r\n                            <Card.Img variant=\"top\" src={base + instrument.imageUrl1} height=\"380px\" width=\"380px\" />\r\n                        </Card.Body>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <Card.Body>\r\n                            <p style={{ color: \"#06E2FF\" }}>______________________________________________</p>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {instrument.name}</h4></ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>Price: {instrument.price}</ListGroupItem>\r\n                            \r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>Category: {instrument.instrumentCategory.name}</ListGroupItem>\r\n\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>CountInStock: {instrument.quantity}</ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <Input\r\n                                        style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                        type=\"select\"\r\n                                        name=\"select\"\r\n                                        id=\"exampleSelect\"\r\n                                        placeholder=\"Select Quantity\"\r\n                                        size=\"lg\"\r\n                                        onChange={(e) => { setQty(e.target.value) }}\r\n                                    >\r\n                                        <option>Select Quantity</option>\r\n                                        {[...Array(instrument.quantity).keys()].map((x) => (\r\n                                            <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </ListGroupItem>\r\n                            </ListGroup>\r\n                            {instrument.quantity > 0 && (\r\n                                <Button\r\n                                    style={{ color: \"#06E2FF\", }}\r\n                                    outline color=\"primary\" size=\"lg\" block type=\"submit\"\r\n                                    onClick={handleAddToCart}\r\n                                >\r\n                                    Add To Cart\r\n                                </Button>)}\r\n                        </Card.Body>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        ) : (\r\n                <h1></h1>\r\n            )}\r\n    </div >\r\n    );\r\n\r\n}\r\nexport default InstrumentDetailsScreen;","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentsScreen.jsx",["635","636","637","638","639","640","641","642","643","644","645","646","647"],"import React, { useState, useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport swal from 'sweetalert';\r\nimport { deleteinstrument, listinstruments } from \"../../../actions/shop/sinstrumentAction\";\r\nimport { listCategories } from \"../../../actions/shop/scategoryAction\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Table } from \"reactstrap\";\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n\r\n    dispatch(deleteinstrument(id))\r\n\r\n}\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\nconst InstrumentssScreen = (props) => {\r\n\r\n    const productList = useSelector((state) => state.sinstrumentListReducer);\r\n    const { instruments } = productList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listinstruments())\r\n        dispatch(listCategories());\r\n\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"name\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"price\",\r\n            text: \"price\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"countInStock\",\r\n            text: \"Quantity\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"createdAt\",\r\n            text: \"Create Time\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"imageUrl\",\r\n            text: \"Photo name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"category.name\",\r\n            text: \"Category\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"subCategory.name\",\r\n            text: \"SubCategory\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"link\",\r\n            text: \"Action\",\r\n            formatter: (rowContent, row) => {\r\n                return (\r\n                    <div>\r\n                        <Link to={\"productdetailsadmin/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Detail\r\n                            </Button>\r\n                        </Link>\r\n                        <Link to={\"productedit/\" + row.id}>\r\n                            <Button color=\"dark\" className=\"mr-2\">\r\n                                Edit\r\n                            </Button>\r\n                        </Link>\r\n                        <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, row.id)}>\r\n                            Delete\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col col-lg-2\">\r\n\r\n                </div>\r\n                {instruments && (\r\n                    <div className=\"col col-lg-8\">\r\n                        <h2>instruments List</h2>\r\n                        <Table striped>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Create Time</th>\r\n                                    <th>Category</th>\r\n                                    <th>Sub Category</th>\r\n                                    <th>Update</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {instruments.map((product) => (\r\n                                    <tr key={product.id}>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price}</td>\r\n                                        <td>{product.countInStock}</td>\r\n                                        <td>{product.createdAt}</td>\r\n                                        <td>{product.category.name}</td>\r\n                                        <td>{product.subCategory.name}</td>\r\n                                        <td> <Link to={\"productedit/\" + product.id}>\r\n                                            <Button color=\"dark\" className=\"mr-2\">\r\n                                                Edit\r\n                                            </Button>\r\n                                        </Link></td>\r\n                                        <td>\r\n                                            <Button color=\"dark\" className=\"mr-2\" onClick={() => handleClick(dispatch, product.id)}>\r\n                                                Delete\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                )}\r\n                <div className=\"col col-lg-2\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        // <Container>\r\n        //     {products ? (\r\n        //         <ToolkitProvider\r\n        //             bootstrap4\r\n        //             keyField=\"id\"\r\n        //             data={products}\r\n        //             columns={columns}\r\n        //             defaultSorted={defaultSorted}\r\n        //             search\r\n        //         >\r\n        //             {(props) => (\r\n        //                 <div>\r\n        //                     <Row>\r\n        //                         <Col>\r\n        //                             <Link to=\"/productcreate\">\r\n        //                                 <Button color=\"dark\" className=\"mr-2\">\r\n        //                                     Create Product\r\n        //                                 </Button>\r\n        //                             </Link>\r\n        //                         </Col>\r\n        //                         <Col>\r\n        //                             <div className=\"float-right\">\r\n        //                                 <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n        //                             </div>\r\n        //                         </Col>\r\n        //                     </Row>\r\n\r\n        //                     <BootstrapTable\r\n        //                         {...props.baseProps}\r\n        //                         pagination={paginationFactory()}\r\n        //                     />\r\n        //                 </div>\r\n        //             )}\r\n        //         </ToolkitProvider>\r\n        //     ) : (\r\n        //             <div className=\"text-center\">\r\n        //                 {props.errorCategoriesList ? (\r\n        //                     <h4>{props.errorCategoriesList}</h4>\r\n        //                 ) : (\r\n        //                         <Spinner color=\"dark\" />\r\n        //                     )}\r\n        //             </div>\r\n        //         )}\r\n        // </Container>\r\n    );\r\n};\r\n\r\nexport default InstrumentssScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumnetUpdateScreen.jsx",["648","649","650","651","652","653","654","655","656","657"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    updateinstrument,\r\n    detailsinstrument\r\n} from '../../../actions/shop/sinstrumentAction';\r\nimport { listCategories } from '../../../actions/shop/scategoryAction';\r\n\r\n\r\nimport { Button, Form, FormGroup, Input, Label, Card } from 'reactstrap';\r\nimport base from '../../../service/config';\r\n\r\nfunction InstrumentUpdateScreen(props) {\r\n\r\n    const productId = props.match.params.id;\r\n    //const [modalVisible, setModalVisible] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [categoryId, setCategory] = useState('');\r\n    const [subCategoryId, setSubCategory] = useState('');\r\n\r\n    const [countInStock, setCountInStock] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n\r\n    const productSave = useSelector((state) => state.productUpdate);\r\n    const {\r\n        loading: loadingSave,\r\n        success: successSave,\r\n        error: errorSave,\r\n    } = productSave;\r\n\r\n    const productDelete = useSelector((state) => state.productDelete);\r\n    const {\r\n        loading: loadingDelete,\r\n        success: successDelete,\r\n        error: errorDelete,\r\n    } = productDelete;\r\n\r\n    const categoryList = useSelector((state) => state.scategoryList);\r\n    const { categories } = categoryList;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // if (successSave) {\r\n        //     setModalVisible(false);\r\n        // }\r\n        dispatch(detailsinstrument(productId));\r\n        dispatch(listCategories());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [successSave, productId]);\r\n\r\n    // const openModal = (product) => {\r\n    //     setModalVisible(true);\r\n    //     setId(product.id);\r\n    //     setName(product.name);\r\n    //     setPrice(product.price);\r\n    //     setProductCode(product.productCode);\r\n    //     setDescription(product.description);\r\n    //     setImageUrl(product.imageUrl);\r\n    //     setCategory(product.category);\r\n    //     setProductType(product.productType);\r\n    //     setCountInStock(product.countInStock);\r\n    // };\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateinstrument({\r\n                name,\r\n                price,\r\n                imageUrl,\r\n                categoryId,\r\n                subCategoryId,\r\n                countInStock,\r\n                description,\r\n            }, productId)\r\n        );\r\n\r\n    };\r\n    const saveCatHandler = (e) => {\r\n        setCategory(e.target.value);\r\n    }\r\n    const saveSubCatHandler = (e) => {\r\n        setSubCategory(e.target.value);\r\n    }\r\n\r\n    const uploadFileHandler = (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('imageUrl', file);\r\n        setUploading(true);\r\n        axios\r\n            .post(base + '/api/products/savephoto', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setImageUrl(response.data);\r\n                setUploading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setUploading(false);\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"content content-margined\">\r\n\r\n            {productId && categories  && (\r\n\r\n\r\n                <div className=\"container\" style={{ width: 850, backgroundColor: \"#fff\" }}>\r\n                    <Card style={{ borderColor: \"#000\" }}>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <h1 style={{ color: \"#000\", textAlign: \"center\" }}>Product Update</h1>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <Form onSubmit={submitHandler}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"name\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Name\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            color=\"06E2FF\"\r\n                                            placeholder=\"Enter Product Name\"\r\n                                            size=\"lg\"\r\n                                            value={name}\r\n                                            required\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"price\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Price\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"price\"\r\n                                            id=\"price\"\r\n                                            placeholder=\"Enter Product Price\"\r\n                                            size=\"lg\"\r\n                                            value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-3\">\r\n\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"countInStock\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            In Stock\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"countInStock\"\r\n                                            id=\"countInStock\"\r\n                                            placeholder=\"Enter Count in Stock\"\r\n                                            size=\"lg\"\r\n                                            value={countInStock}\r\n                                            onChange={(e) => setCountInStock(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-3\">\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleSelect\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Category\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"select\"\r\n                                            name=\"select\"\r\n                                            id=\"exampleSelect\"\r\n                                            size=\"lg\"\r\n                                            onChange={saveCatHandler}\r\n                                        >\r\n                                            <option>Select Category</option>\r\n                                            {categories.map((category) => (\r\n                                                <option value={category.id}>\r\n                                                    {category.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                </div>\r\n                               \r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"image\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Image Name\r\n                                    </Label>\r\n\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"image\"\r\n                                            id=\"image\"\r\n                                            placeholder=\"Image Name\"\r\n                                            size=\"lg\"\r\n                                            value={imageUrl}\r\n                                            onChange={(e) => setImageUrl(e.target.value)}\r\n                                        />\r\n                                        <Input\r\n                                            style={{ color: \"#06E2FF\", backgroundColor: \"#fff\" }}\r\n                                            type=\"file\"\r\n                                            label=\"Yo, pick a file!\"\r\n                                            onChange={uploadFileHandler}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleText\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Description\r\n                                        </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"textarea\"\r\n                                            name=\"text\"\r\n                                            id=\"exampleText\"\r\n                                            placeholder=\"Enter Product Discription\"\r\n                                            size=\"lg\"\r\n                                            value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Button style={{\r\n                                color: \"#06E2FF\"\r\n                            }} outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                                Submit\r\n                       </Button>\r\n\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n}\r\nexport default InstrumentUpdateScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentCategory.jsx",["658"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listCategories } from '../../../actions/shop/scategoryAction';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction InstrumentCaregory() {\r\n\r\n\r\n    const categoryList = useSelector((state) => state.scategoryList);\r\n    const { categories, loading, error } = categoryList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listCategories());\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <div>Loading...</div>\r\n            ) : error ? (\r\n                <div>{error}</div>\r\n            ) : (\r\n                        <div className=\"container\">\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n                            <br />\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\">\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"row\">\r\n                                        {categories.map((category) => (\r\n                                            <div className=\"col-4\">\r\n                                                <Card key={category.id} style={{ color: \"#fff\", backgroundColor: \"#1FC46C\" }} >\r\n                                                    <Card.Body>\r\n                                                        <p style={{ color: \"#fff\" }}>___________________________</p>\r\n                                                        <Card.Title style={{\r\n                                                            textAlign: 'center'\r\n                                                        }}>\r\n                                                            <Link to={`/productcategory/` + category.id}>\r\n                                                                <p style={{\r\n                                                                    color: \"#fff\"\r\n                                                                }}>{category.name}</p>\r\n                                                            </Link>\r\n                                                        </Card.Title>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                                <br />\r\n                                                <br />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n        </>\r\n    );\r\n}\r\nexport default InstrumentCaregory;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sinstrument\\InstrumentListByCategories.jsx",["659","660"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listinstrumentsByCategory } from '../../../actions/shop/sinstrumentAction';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport base from '../../../service/config';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\n\r\nfunction InstrumentListByCategory(props) {\r\n\r\n    const category = props.match.params.id ? props.match.params.id : '';\r\n\r\n    const productList = useSelector((state) => state.sinstrumentListByCategoryReducer);\r\n    const { products } = productList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listinstrumentsByCategory(category));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [category]);\r\n    console.log(products);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {products ? (\r\n                    <div className=\"row\">\r\n                        {products.map((product) => (\r\n                            <div className=\"col-3\">\r\n                                <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                    <div className=\"row\">\r\n                                        <Link to={'/productdetails/' + product.id}>\r\n                                            <Card.Img variant=\"top\" height=\"200px\" src={base + product.imageUrl} />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <Card.Body>\r\n                                            <p style={{ color: \"#06E2FF\" }}>_________________________________</p>\r\n                                            <ListGroup className=\"list-group-flush\">\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                            </ListGroup>\r\n                                        </Card.Body>\r\n                                    </div>\r\n\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                        <h1>Empty</h1>\r\n                    )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default InstrumentListByCategory;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\shop\\sinstrumentAction.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\scart\\sCartScreen.jsx",["661","662","663"],"import React, { useEffect } from 'react';\r\nimport { saddToCart, sremoveFromCart } from '../../../actions/shop/scartAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { Button, Input } from 'reactstrap';\r\nimport base from '../../../service/config';\r\n\r\n\r\nfunction SCartScreen(props) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n\r\n    const cart = useSelector(state => state.scart);\r\n    const { scartItems } = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCartHandler = (productId) => {\r\n        dispatch(sremoveFromCart(productId));\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (productId) {\r\n            dispatch(saddToCart(productId, qty));\r\n        }\r\n    }, []);\r\n\r\n    const checkoutHandler = () => {\r\n        props.history.push(\"/splaceorder\");\r\n    }\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { scartItems ? (\r\n            <Card style={{ color: \"#000\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        {console.log(scartItems)}\r\n                        {scartItems.map((item) => (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\" }}>{item.name}</Card>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Button\r\n                                                    style={{ color: \"#fff\", }}\r\n                                                    color=\"danger\" size=\"lg\" block type=\"submit\"\r\n                                                    onClick={() => removeFromCartHandler(item.id)}\r\n                                                >\r\n                                                    Remove?\r\n                                                </Button>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Input\r\n                                                    style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                    type=\"select\"\r\n                                                    name=\"select\"\r\n                                                    id=\"exampleSelect\"\r\n                                                    size=\"lg\"\r\n                                                    value={item.qty}\r\n                                                    onChange={(e) => dispatch(saddToCart(item.id, e.target.value))}\r\n                                                >\r\n                                                    {[...Array(item.qty).keys()].map(x =>\r\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                    )}\r\n                                                </Input>\r\n                                            </Card.Body>\r\n                                            <p style={{ color: \"#000\" }}>_____________________</p>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\" }}>{item.price * item.qty}</Card>\r\n                                            </Card.Body>\r\n                                            <p style={{ color: \"#000\" }}>_____________________</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <Card.Body>\r\n                                        <Card.Img variant=\"top\" height=\"110px\" width=\"60px\" src={base + item.imageUrl1} />\r\n                                    </Card.Body>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        ))}\r\n\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <p style={{ color: \"#06E2FF\" }}>____________________</p>\r\n                        <Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>SubTotal: {scartItems.reduce((a, c) => a + c.qty * 1, 0)} items</h4>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>TotalPrice: {scartItems.reduce((a, c) => a + c.price * c.qty, 0)}Taka</h4>\r\n                                </ListGroupItem>\r\n\r\n                                {scartItems.reduce((a, c) => a + c.price * c.qty, 0) && scartItems.reduce((a, c) => a + c.qty * 1, 0) > 0 ? (\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                        <Button\r\n                                            style={{ color: \"#fff\", }}\r\n                                            color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                            onClick={checkoutHandler}\r\n                                        >\r\n                                            Proceed to Checkout\r\n                                                </Button>\r\n                                    </ListGroupItem>\r\n                                ) : (\r\n                                        <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                            <Button\r\n                                                style={{ color: \"#fff\", }}\r\n                                                color=\"danger\" size=\"lg\" block type=\"submit\"\r\n\r\n                                            >\r\n                                                You Can't CheckOut\r\n                                                </Button>\r\n                                        </ListGroupItem>\r\n                                    )}\r\n                            </ListGroup>\r\n\r\n                        </Card.Body>\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n\r\n        ) : (\r\n                <h1></h1>\r\n            )}\r\n    </div >)\r\n}\r\n\r\nexport default SCartScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\shop\\scartAction.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\shop\\sorderAction.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sorder\\splacesOrder.jsx",["664","665","666","667"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\nimport { createOrder, listMyOrders } from '../../../actions/shop/sorderAction';\r\nimport base from '../../../service/config'\r\nfunction SPlaceOrderScreen(props) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n\r\n    const cart = useSelector(state => state.scart);\r\n    const orderCreate = useSelector(state => state.sorderCreateReducer);\r\n\r\n    const { success } = orderCreate;\r\n    const { scartItems } = cart;\r\n\r\n    const itemsPrice = scartItems.reduce((a, c) => a + c.price * c.qty, 0);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const placeOrderHandler = () => {\r\n\r\n        dispatch(createOrder(userInfo.item1.id, itemsPrice, scartItems));\r\n        props.history.push('/sorderList/');\r\n    }\r\n\r\n    const productDetailsHandler = (id) => {\r\n        props.history.push('/productdetails/' + id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listMyOrders(userInfo.item1.id));\r\n\r\n    }, []);\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { scartItems ? (\r\n            <Card style={{ color: \"#000\", backgroundColor: \"#fff\", borderColor: \"#5cb85c\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        {scartItems.map((item) => (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <Card.Body>\r\n                                        <Card.Img variant=\"top\" height=\"110px\" width=\"110px\" src={base + item.imageUrl1} />\r\n                                    </Card.Body>\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"row\">\r\n                                        <Card.Body>\r\n                                            <Card style={{ height: \"40px\", justifyContent: \"center\", borderColor: \"#5cb85c\" }}>{item.name}</Card>\r\n                                        </Card.Body>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\", borderColor: \"#5cb85c\" }}>Qty: {item.qty}</Card>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\", borderColor: \"#5cb85c\" }}>{item.price * item.qty}</Card>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <p style={{ color: \"#06E2FF\" }}>____________________</p>\r\n                        <Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h3 style={{ color: \"#25D03D\" }}>Order Summary</h3>\r\n                                    <p style={{ color: \"#25D03D\" }}>________________________</p>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>SubTotal: {scartItems.reduce((a, c) => a + c.qty * 1, 0)} items</h4>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>TotalPrice: {scartItems.reduce((a, c) => a + c.price * c.qty, 0)}Taka</h4>\r\n                                </ListGroupItem>\r\n                                {/* <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>Main Account Will Have: {fund.mainAccount - scartItems.reduce((a, c) => a + c.price * c.qty, 0)} Taka</h4>\r\n                                </ListGroupItem> */}\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>Shipping Address: </h4>\r\n                                    <h5>Shop Name: {userInfo.item1.agentShopName}</h5>\r\n                                    <h5>Market: {userInfo.item1.marketName}</h5>\r\n                                    <h5>Union / Ward: {userInfo.item1.unionOrWardName}</h5>\r\n                                    <h5>Upozila: {userInfo.item1.upozilaName}</h5>\r\n                                    <h5>District: {userInfo.item1.districtName}</h5>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <Button\r\n                                        style={{ color: \"#fff\", }}\r\n                                        color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                        onClick={placeOrderHandler}\r\n                                    >\r\n                                        Confirm Order\r\n                                                </Button>\r\n                                </ListGroupItem>\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        ) : (\r\n                <h1></h1>\r\n            )}\r\n    </div >)\r\n}\r\n\r\nexport default SPlaceOrderScreen;","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sorder\\sorderListForFarmer.jsx",["668","669"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\nimport { listMyOrders } from '../../../actions/shop/sorderAction'\r\n\r\nconst OrderListForFarmer = (props) => {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn)\r\n    const { userInfo } = userSignIn;\r\n\r\n    const myOrderList = useSelector((state) => state.mysOrderListReducer)\r\n    const { orders } = myOrderList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listMyOrders(userInfo.item1.id))\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const handleOrderDetails = (id) => {\r\n        props.history.push(\"/sOrderDeatils/\" + id);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {orders ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        {orders.map((order) => (\r\n                            <div>\r\n                                <Card key={order.id} style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                                    <Card.Body >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>OrderNo:-{order.orderNo}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>Total Amount:-{order.totalAmount}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>Order Time:-{order.orderDate}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            color: \"#fff\",\r\n                                                        }}\r\n                                                        color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                                        onClick={() => handleOrderDetails(order.id)}\r\n                                                    >\r\n                                                        Details\r\n                                                </Button>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            ) : (\r\n                    <h1></h1>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderListForFarmer;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sorder\\sorderListForAdmin.jsx",["670","671"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\nimport { listOrders } from '../../../actions/shop/sorderAction'\r\n\r\nconst SOrderListForAdmin = (props) => {\r\n\r\n\r\n    const OrderList = useSelector((state) => state.sorderListReducer)\r\n    const { orders } = OrderList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listOrders())\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const handleOrderDetails = (id) => {\r\n        props.history.push(\"/sOrderDeatils/\" + id);\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {orders ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-1\">\r\n\r\n                    </div>\r\n                    <div className=\"col-10\">\r\n                        {orders.map((order) => (\r\n                            <div>\r\n                                <Card key={order.id} style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                                    <Card.Body >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n\r\n                                                <h5 style={{ color: \"#000\" }}>OrderNo:- {order.orderNo}</h5>\r\n                                                <h5 style={{ color: \"#000\" }}>Farmer:- {order.userName}</h5>\r\n\r\n                                                <h3 style={{ color: \"#000\" }}>Shipping Address:</h3>\r\n                                                <h5 style={{ color: \"#000\" }}>{order.user.marketName}, {order.user.unionOrWardName}, {order.user.upozilaName}, {order.user.districtName}.</h5>\r\n\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n\r\n                                                <h5 style={{ color: \"#000\" }}>Total Amount:-{order.totalAmount}</h5>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n\r\n                                                <h5 style={{ color: \"#000\" }}>Order Time:-{order.orderDate}</h5>\r\n\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            color: \"#fff\",\r\n                                                        }}\r\n                                                        color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                                        onClick={() => handleOrderDetails(order.id)}\r\n                                                    >\r\n                                                        Details\r\n                                                </Button>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            ) : (\r\n                    <h1></h1>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SOrderListForAdmin;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\shop\\sorder\\sorderdetails.jsx",["672","673","674","675","676","677","678"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listinstruments } from '../../../actions/shop/sinstrumentAction';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { detailsOrder } from '../../../actions/shop/sorderAction';\r\nimport base from '../../../service/config'\r\n\r\nfunction SOrderDetails(props) {\r\n\r\n    const orderId = props.match.params.id;\r\n\r\n    const [searchKeyword, setSearchKeyword] = useState('');\r\n    const [sortOrder, setSortOrder] = useState('');\r\n    //const category = props.match.params.id ? props.match.params.id : '';\r\n\r\n    const SorderDetails = useSelector((state) => state.sorderDetailsReducer);\r\n    const { order } = SorderDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsOrder(orderId));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{width:\"900px\"}}>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {order ? (\r\n                    <Card>\r\n                        <div className=\"row\">\r\n                            {order.map((product) => (\r\n                                <div className=\"col-3\">\r\n                                    <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                        <div className=\"row\">\r\n                                            <Card.Img variant=\"top\" height=\"150px\" src={base + product.imageUrl1} />\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <Card.Body>\r\n                                                <p style={{ color: \"#000\" }}>_________________________________</p>\r\n                                                <ListGroup className=\"list-group-flush\">\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Category: {product.instrumentCategory.name}</ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>CountInStock: {product.quantity}</ListGroupItem>\r\n                                                </ListGroup>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </Card>\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </Card>\r\n\r\n                ) : (\r\n                        <h1></h1>\r\n                    )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default SOrderDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\Area\\AreaCode\\AreaCodeComponent.jsx",["679","680"],"import React, { useState, useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\r\n\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { listAreaCode } from '../../../actions/Area/addressActions';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\nconst AreaCodeScreen = (props) => {\r\n\r\n    const areaCodeList = useSelector((state) => state.areaCodeList);\r\n    const { codes } = areaCodeList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listAreaCode());\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"unionOrWard.upozila.district.division.name\",\r\n            text: \"Division\",\r\n            sort: true,\r\n        },\r\n        // {\r\n        //     dataField: \"unionOrWard.upozila.district.division.divisionCode\",\r\n        //     text: \"Division Code\",\r\n        //     sort: true,\r\n        // },\r\n        {\r\n            dataField: \"unionOrWard.upozila.district.name\",\r\n            text: \"District\",\r\n            sort: true,\r\n        },\r\n        // {\r\n        //     dataField: \"unionOrWard.upozila.district.districtCode\",\r\n        //     text: \"District Code\",\r\n        //     sort: true,\r\n        // },\r\n        {\r\n            dataField: \"unionOrWard.upozila.name\",\r\n            text: \"Upozila\",\r\n            sort: true,\r\n        },\r\n        // {\r\n        //     dataField: \"unionOrWard.upozila.upozilaCode\",\r\n        //     text: \"Upozila Code\",\r\n        //     sort: true,\r\n        // },\r\n        {\r\n            dataField: \"unionOrWard.name\",\r\n            text: \"Union Or Ward\",\r\n            sort: true,\r\n        },\r\n        // {\r\n        //     dataField: \"unionOrWard.unionOrWardCode\",\r\n        //     text: \"Union Or Ward Code\",\r\n        //     sort: true,\r\n        // },\r\n        {\r\n            dataField: \"market.name\",\r\n            text: \"Market\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"market.marketCode\",\r\n            text: \"Market Code\",\r\n            sort: true,\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n\r\n        <Container>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n                <div className=\"col-10\">\r\n                    {codes ? (\r\n                        <ToolkitProvider\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={codes}\r\n                            columns={columns}\r\n                            defaultSorted={defaultSorted}\r\n                            search\r\n                        >\r\n                            {(props) => (\r\n                                <div>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"float-right\">\r\n                                                <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        pagination={paginationFactory()}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </ToolkitProvider>\r\n                    ) : (\r\n                            <div className=\"text-center\">\r\n                                {props.errorCategoriesList ? (\r\n                                    <h4>{props.errorCategoriesList}</h4>\r\n                                ) : (\r\n                                        <Spinner color=\"dark\" />\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n                <div className=\"col-1\">\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AreaCodeScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\Area\\addressActions.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bproduct\\createProductScreen.jsx",["681"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n    saveproduct,\r\n    listproducts,\r\n} from '../../../actions/business/bproductAction';\r\nimport { Button, Form, FormGroup, Input, Label, Card } from 'reactstrap';\r\nimport { blistCategories } from '../../../actions/business/bcategoryAction';\r\nimport base from '../../../service/config';\r\n\r\nfunction CreateProductScreen(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [imageUrl1, setImageUrl1] = useState('');\r\n    const [categoryId, setCategory] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const productSave = useSelector((state) => state.sinstrumentSaveReducer);\r\n    const {\r\n\r\n        success: successSave,\r\n\r\n    } = productSave;\r\n\r\n    const productDelete = useSelector((state) => state.sinstrumentDeleteReducer);\r\n    const {\r\n\r\n        success: successDelete,\r\n\r\n    } = productDelete;\r\n\r\n    const categoryList = useSelector((state) => state.bcategoryListReducer);\r\n    const { categories } = categoryList;\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn)\r\n    const { userInfo } = userSignIn;\r\n\r\n    const currentuser = userInfo.item1.id;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch((listproducts));\r\n        dispatch(blistCategories());\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [successSave, successDelete]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveproduct({\r\n                currentuser,\r\n                name,\r\n                price,\r\n                imageUrl1,\r\n                categoryId,\r\n                quantity,\r\n                description,\r\n            })\r\n        );\r\n        // props.history.push('/productsadmin') \r\n    };\r\n    const saveCatHandler = (e) => {\r\n        setCategory(e.target.value);\r\n    }\r\n\r\n\r\n    const uploadFileHandler = (e) => {\r\n        const file = e.target.files[0];\r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('imageUrl', file);\r\n\r\n        axios\r\n            .post(base + '/api/instruments/savephoto', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            })\r\n            .then((response) => {\r\n                setImageUrl1(response.data);\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"container\" style={{ justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\" }}>\r\n            <br />\r\n\r\n            {categories && (\r\n\r\n                <div className=\"container\" style={{ width: 850, backgroundColor: \"#fff\" }}>\r\n                    <Card style={{ borderColor: \"#000\" }}>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <h1 style={{ color: \"#000\", textAlign: \"center\" }}>Crops Upload</h1>\r\n                        <p style={{ color: \"#000\", textAlign: \"center\" }}>___________________________________________________________</p>\r\n                        <Form onSubmit={submitHandler}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"name\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Name\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"name\"\r\n                                            color=\"06E2FF\"\r\n                                            placeholder=\"Enter Product Name\"\r\n                                            size=\"lg\"\r\n                                            value={name}\r\n                                            required\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"price\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Price\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"price\"\r\n                                            id=\"price\"\r\n                                            placeholder=\"Enter Product Price\"\r\n                                            size=\"lg\"\r\n                                            value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n\r\n\r\n\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"countInStock\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            In Stock\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"countInStock\"\r\n                                            id=\"countInStock\"\r\n                                            placeholder=\"Enter Count in Stock\"\r\n                                            size=\"lg\"\r\n                                            value={quantity}\r\n                                            onChange={(e) => setQuantity(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"col col-lg-6\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleSelect\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Category\r\n                                    </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"select\"\r\n                                            name=\"select\"\r\n                                            id=\"exampleSelect\"\r\n                                            size=\"lg\"\r\n                                            onChange={saveCatHandler}\r\n                                        >\r\n                                            <option>Select Category</option>\r\n                                            {categories.map((category) => (\r\n                                                <option value={category.id}>\r\n                                                    {category.name}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Input>\r\n                                    </FormGroup>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"image\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Image Name\r\n                                    </Label>\r\n\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"text\"\r\n                                            name=\"image\"\r\n                                            id=\"image\"\r\n                                            placeholder=\"Image Name\"\r\n                                            size=\"lg\"\r\n                                            value={imageUrl1}\r\n                                            onChange={(e) => setImageUrl1(e.target.value)}\r\n                                        />\r\n                                        <Input\r\n                                            style={{ color: \"#06E2FF\", backgroundColor: \"#fff\" }}\r\n                                            type=\"file\"\r\n                                            label=\"Yo, pick a file!\"\r\n                                            onChange={uploadFileHandler}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col col-lg-12\">\r\n                                    <FormGroup>\r\n                                        <Label\r\n                                            for=\"exampleText\"\r\n                                            style={{ color: \"#000\" }}\r\n                                        >\r\n                                            Description\r\n                                        </Label>\r\n                                        <Input\r\n                                            style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                            type=\"textarea\"\r\n                                            name=\"text\"\r\n                                            id=\"exampleText\"\r\n                                            placeholder=\"Enter Product Discription\"\r\n                                            size=\"lg\"\r\n                                            value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <Button style={{\r\n                                color: \"#06E2FF\"\r\n                            }} outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                                Submit\r\n                       </Button>\r\n\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n            )\r\n            }\r\n            <br />\r\n            <br />\r\n        </div >\r\n    );\r\n}\r\nexport default CreateProductScreen;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\business\\bproductAction.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\business\\bproductConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\business\\bproductReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bproduct\\myproductList.jsx",["682"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listproducts } from '../../../actions/business/bproductAction';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport base from '../../../service/config';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction MyProductList(props) {\r\n\r\n    const category = props.match.params.id ? props.match.params.id : '';\r\n\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn)\r\n    const { userInfo } = userSignIn;\r\n\r\n    const productList = useSelector((state) => state.sproductListReducer);\r\n    const { products } = productList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listproducts(userInfo.item1.id));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, [category]);\r\n    console.log(products);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ width: \"800px\" }}>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {products ? (\r\n                    <div className=\"row\">\r\n                        {products.map((product) => (\r\n                            <div className=\"col-3\">\r\n                                <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                    <div className=\"row\">\r\n                                        <Link to={'/productsdetails/' + product.id}>\r\n                                            <Card.Img variant=\"top\" height=\"200px\" src={base + product.imageUrl1} />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <Card.Body>\r\n                                            <p style={{ color: \"#06E2FF\" }}>_________________________________</p>\r\n                                            <ListGroup className=\"list-group-flush\">\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                            </ListGroup>\r\n                                        </Card.Body>\r\n                                    </div>\r\n\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                        <h1>Empty</h1>\r\n                    )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default MyProductList;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bproduct\\wholesellerSearchMarket.jsx",["683","684","685","686","687"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\n\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { listMarkets } from '../../../actions/Area/marketActions';\r\nimport { listproducts, listproductsByMarket } from '../../../actions/business/bproductAction'\r\n\r\nimport base from '../../../service/config'\r\n\r\nfunction WholeSellerFindFarmer(props) {\r\n\r\n    const [marketCode, setMarketCode] = useState('');\r\n\r\n    const marketList = useSelector((state) => state.marketList);\r\n    const { markets } = marketList;\r\n\r\n    const marketDetails = useSelector((state) => state.marketDetails);\r\n    const { market } = marketDetails;\r\n\r\n    const productList = useSelector((state) => state.sproductListByCategoryReducer);\r\n    const { products } = productList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        // dispatch(listMarkets());\r\n        // dispatch(listproducts());\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(listproductsByMarket(marketCode));\r\n    };\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Form onSubmit={submitHandler}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <FormGroup>\r\n                            <Input\r\n                                style={{\r\n                                    color: \"#000\",\r\n                                    backgroundColor: \"#fff\"\r\n                                }}\r\n                                type=\"text\"\r\n                                name=\"\"\r\n                                id=\"\"\r\n                                placeholder=\"Enter Agnet Code\"\r\n                                size=\"lg\"\r\n                                value={marketCode}\r\n                                onChange={(e) => setMarketCode(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n\r\n                        <Button style={{\r\n                            color: \"#fff\",\r\n                            backgroundColor: \"#000\"\r\n                        }} outline color=\"primary\" size=\"lg\" block type=\"submit\">\r\n                            Search\r\n                       </Button>\r\n                    </div>\r\n\r\n                </div>\r\n            </Form>\r\n\r\n            {/* <br />\r\n            <br />\r\n            <div className=\"container\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {products ? (\r\n                    <div className=\"row\">\r\n                        {products.map((product) => (\r\n                            <div className=\"col-3\">\r\n                                <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                    <div className=\"row\">\r\n                                        <Link to={'/productsdetails/' + product.id}>\r\n                                            <Card.Img variant=\"top\" height=\"200px\" src={base + product.imageUrl1} />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <Card.Body>\r\n                                            <p style={{ color: \"#06E2FF\" }}>_________________________________</p>\r\n                                            <ListGroup className=\"list-group-flush\">\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                            </ListGroup>\r\n                                        </Card.Body>\r\n                                    </div>\r\n\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                        <h1>Empty</h1>\r\n                    )}\r\n            </div> */}\r\n\r\n            {products &&\r\n                <div className=\"container\">\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n\r\n                        </div>\r\n                        <div className=\"col-10\">\r\n                            {products.map((product) => (\r\n                                <div className=\"col-12\">\r\n                                    <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                        <div className=\"row\" style={{ textAlign: \"center\", justifyContent: \"center\" }}>\r\n                                            <Link to={'/productsdetails/' + product.id} >\r\n                                                <Card.Img  variant=\"top\" height=\"200px\"   width=\"600px\" src={base + product.imageUrl1} />\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <Card.Body>\r\n                                                <p style={{ color: \"#06E2FF\" }}>_________________________________</p>\r\n                                                <ListGroup className=\"list-group-flush\">\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Farmer Name: {product.farmer.firstName}</ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Farmer Contact No: {product.farmer.phoneNumber}</ListGroupItem>\r\n                                                </ListGroup>\r\n                                            </Card.Body>\r\n                                        </div>\r\n\r\n                                    </Card>\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default WholeSellerFindFarmer;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bproduct\\productDetailsScreen.jsx",["688","689"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { detailsproduct } from '../../../actions/business/bproductAction';\r\nimport { Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap'\r\nimport { Input } from 'reactstrap';\r\nimport base from '../../../service/config';\r\n\r\nfunction ProductDetailsScreen(props) {\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const productDetails = useSelector((state) => state.sproductDetailsReducer);\r\n    const { product } = productDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsproduct(props.match.params.id));\r\n        return () => {\r\n            //\r\n        };\r\n    }, [props.match.params.id]);\r\n\r\n\r\n    const handleAddToCart = () => {\r\n\r\n        props.history.push('/bcart/' + props.match.params.id + '?qty=' + qty);\r\n    };\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { product ? (\r\n            <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <Card.Body>\r\n                            <Card.Img variant=\"top\" src={base + product.imageUrl1} height=\"380px\" width=\"380px\" />\r\n                        </Card.Body>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <Card.Body>\r\n                            <p style={{ color: \"#06E2FF\" }}>______________________________________________</p>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>Price: {product.price}</ListGroupItem>\r\n\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>Category: {product.category.name}</ListGroupItem>\r\n\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>CountInStock: {product.quantity}</ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <Input\r\n                                        style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                        type=\"select\"\r\n                                        name=\"select\"\r\n                                        id=\"exampleSelect\"\r\n                                        placeholder=\"Select Quantity\"\r\n                                        size=\"lg\"\r\n                                        onChange={(e) => { setQty(e.target.value) }}\r\n                                    >\r\n                                        <option>Select Quantity</option>\r\n                                        {[...Array(product.quantity).keys()].map((x) => (\r\n                                            <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Input>\r\n                                </ListGroupItem>\r\n                            </ListGroup>\r\n                            {product.quantity > 0 && (\r\n                                <Button\r\n                                    style={{ color: \"#06E2FF\", }}\r\n                                    outline color=\"primary\" size=\"lg\" block type=\"submit\"\r\n                                    onClick={handleAddToCart}\r\n                                >\r\n                                    Add To Cart\r\n                                </Button>)}\r\n                        </Card.Body>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        ) : (\r\n                <h1></h1>\r\n            )}\r\n    </div >\r\n    );\r\n\r\n}\r\nexport default ProductDetailsScreen;","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\bcart\\bCartScreen.jsx",["690","691","692"],"import React, { useEffect } from 'react';\r\nimport { baddToCart, bremoveFromCart } from '../../../actions/business/bcartAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { Button, Input } from 'reactstrap';\r\nimport base from '../../../service/config';\r\n\r\n\r\nfunction BCartScreen(props) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n\r\n    const cart = useSelector(state => state.bcart);\r\n    const { bcartItems } = cart;\r\n\r\n    const productId = props.match.params.id;\r\n    const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const removeFromCartHandler = (productId) => {\r\n        dispatch(bremoveFromCart(productId));\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (productId) {\r\n            dispatch(baddToCart(productId, qty));\r\n        }\r\n    }, []);\r\n\r\n    const checkoutHandler = () => {\r\n        props.history.push(\"/bplaceorder\");\r\n    }\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { bcartItems ? (\r\n            <Card style={{ color: \"#000\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        {console.log(bcartItems)}\r\n                        {bcartItems.map((item) => (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\" }}>{item.name}</Card>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Button\r\n                                                    style={{ color: \"#fff\", }}\r\n                                                    color=\"danger\" size=\"lg\" block type=\"submit\"\r\n                                                    onClick={() => removeFromCartHandler(item.id)}\r\n                                                >\r\n                                                    Remove?\r\n                                                </Button>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Input\r\n                                                    style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                    type=\"select\"\r\n                                                    name=\"select\"\r\n                                                    id=\"exampleSelect\"\r\n                                                    size=\"lg\"\r\n                                                    value={item.qty}\r\n                                                    onChange={(e) => dispatch(baddToCart(item.id, e.target.value))}\r\n                                                >\r\n                                                    {[...Array(item.qty).keys()].map(x =>\r\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                    )}\r\n                                                </Input>\r\n                                            </Card.Body>\r\n                                            <p style={{ color: \"#000\" }}>_____________________</p>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\" }}>{item.price * item.qty}</Card>\r\n                                            </Card.Body>\r\n                                            <p style={{ color: \"#000\" }}>_____________________</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                    <Card.Body>\r\n                                        <Card.Img variant=\"top\" height=\"110px\" width=\"60px\" src={base + item.imageUrl1} />\r\n                                    </Card.Body>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        ))}\r\n\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <p style={{ color: \"#06E2FF\" }}>____________________</p>\r\n                        <Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>SubTotal: {bcartItems.reduce((a, c) => a + c.qty * 1, 0)} items</h4>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>TotalPrice: {bcartItems.reduce((a, c) => a + c.price * c.qty, 0)}Taka</h4>\r\n                                </ListGroupItem>\r\n\r\n                                {bcartItems.reduce((a, c) => a + c.price * c.qty, 0) && bcartItems.reduce((a, c) => a + c.qty * 1, 0) > 0 ? (\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                        <Button\r\n                                            style={{ color: \"#fff\", }}\r\n                                            color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                            onClick={checkoutHandler}\r\n                                        >\r\n                                            Proceed to Checkout\r\n                                                </Button>\r\n                                    </ListGroupItem>\r\n                                ) : (\r\n                                        <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                            <Button\r\n                                                style={{ color: \"#fff\", }}\r\n                                                color=\"danger\" size=\"lg\" block type=\"submit\"\r\n\r\n                                            >\r\n                                                You Can't CheckOut\r\n                                                </Button>\r\n                                        </ListGroupItem>\r\n                                    )}\r\n                            </ListGroup>\r\n\r\n                        </Card.Body>\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n\r\n        ) : (\r\n                <h1></h1>\r\n            )}\r\n    </div >)\r\n}\r\n\r\nexport default BCartScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\business\\bcartAction.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\border\\bplaceorder.jsx",["693","694","695","696"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\nimport { createOrder, listWoleSellerOrders } from '../../../actions/business/borderAction';\r\nimport base from '../../../service/config'\r\nfunction BPlaceOrderScreen(props) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n\r\n    const cart = useSelector(state => state.bcart);\r\n    const orderCreate = useSelector(state => state.borderCreateReducer);\r\n\r\n    const { success } = orderCreate;\r\n    const { bcartItems } = cart;\r\n\r\n    const itemsPrice = bcartItems.reduce((a, c) => a + c.price * c.qty, 0);\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const placeOrderHandler = () => {\r\n\r\n        dispatch(createOrder(userInfo.item1.id, itemsPrice, bcartItems));\r\n        props.history.push('/borderList/');\r\n    }\r\n\r\n    const productDetailsHandler = (id) => {\r\n        props.history.push('/productdetails/' + id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(listWoleSellerOrders(userInfo.item1.id));\r\n\r\n    }, []);\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { bcartItems ? (\r\n            <Card style={{ color: \"#000\", backgroundColor: \"#fff\", borderColor: \"#5cb85c\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        {bcartItems.map((item) => (\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4\">\r\n                                    <Card.Body>\r\n                                        <Card.Img variant=\"top\" height=\"110px\" width=\"110px\" src={base + item.imageUrl1} />\r\n                                    </Card.Body>\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"row\">\r\n                                        <Card.Body>\r\n                                            <Card style={{ height: \"40px\", justifyContent: \"center\", borderColor: \"#5cb85c\" }}>{item.name}</Card>\r\n                                        </Card.Body>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\", borderColor: \"#5cb85c\" }}>Qty: {item.qty}</Card>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <Card.Body>\r\n                                                <Card style={{ height: \"40px\", justifyContent: \"center\", borderColor: \"#5cb85c\" }}>{item.price * item.qty}</Card>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <p style={{ color: \"#06E2FF\" }}>____________________</p>\r\n                        <Card.Body>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h3 style={{ color: \"#25D03D\" }}>Order Summary</h3>\r\n                                    <p style={{ color: \"#25D03D\" }}>________________________</p>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>SubTotal: {bcartItems.reduce((a, c) => a + c.qty * 1, 0)} items</h4>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>TotalPrice: {bcartItems.reduce((a, c) => a + c.price * c.qty, 0)}Taka</h4>\r\n                                </ListGroupItem>\r\n                                {/* <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>Main Account Will Have: {fund.mainAccount - bcartItems.reduce((a, c) => a + c.price * c.qty, 0)} Taka</h4>\r\n                                </ListGroupItem> */}\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <h4>Shipping Address: </h4>\r\n                                    <h5>Shop Name: {userInfo.item1.agentShopName}</h5>\r\n                                    <h5>Market: {userInfo.item1.marketName}</h5>\r\n                                    <h5>Union / Ward: {userInfo.item1.unionOrWardName}</h5>\r\n                                    <h5>Upozila: {userInfo.item1.upozilaName}</h5>\r\n                                    <h5>District: {userInfo.item1.districtName}</h5>\r\n                                </ListGroupItem>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\", textAlign: \"center\" }}>\r\n                                    <Button\r\n                                        style={{ color: \"#fff\", }}\r\n                                        color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                        onClick={placeOrderHandler}\r\n                                    >\r\n                                        Confirm Order\r\n                                                </Button>\r\n                                </ListGroupItem>\r\n                            </ListGroup>\r\n                        </Card.Body>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        ) : (\r\n                <h1></h1>\r\n            )}\r\n    </div >)\r\n}\r\n\r\nexport default BPlaceOrderScreen;","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\actions\\business\\borderAction.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\constants\\business\\borderConstants.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\reducers\\business\\borderReducers.js",[],"F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\border\\borderListScreenForAdmin.jsx",["697","698","699"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\nimport { listOrders } from '../../../actions/business/borderAction'\r\n\r\nconst BOrderListForAdmin = (props) => {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn)\r\n    const { userInfo } = userSignIn;\r\n\r\n    const myOrderList = useSelector((state) => state.borderListReducer)\r\n    const { orders } = myOrderList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listOrders())\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const handleOrderDetails = (id) => {\r\n        props.history.push(\"/bOrderDeatils/\" + id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {orders ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        {orders.map((order) => (\r\n                            <div>\r\n                                <Card key={order.id} style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                                    <Card.Body >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n\r\n                                                <h5 style={{ color: \"#000\" }}>OrderNo:- {order.orderNo}</h5>\r\n                                                <h5 style={{ color: \"#000\" }}>WholeSeller:- {order.holeseller.firstName}</h5>\r\n\r\n                                                <h3 style={{ color: \"#000\" }}>Shipping Address:</h3>\r\n                                                <h5 style={{ color: \"#000\" }}>{order.holeseller.marketName}, {order.holeseller.unionOrWardName}, {order.holeseller.upozilaName}, {order.holeseller.districtName}.</h5>\r\n\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n\r\n                                                <h5 style={{ color: \"#000\" }}>Total Amount:-{order.totalAmount}</h5>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>Order Time:-{order.orderDate}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            color: \"#fff\",\r\n                                                        }}\r\n                                                        color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                                        onClick={() => handleOrderDetails(order.id)}\r\n                                                    >\r\n                                                        Details\r\n                                                </Button>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                    <h1></h1>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BOrderListForAdmin;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\border\\borderDetails.jsx",["700","701","702","703","704","705","706"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listinstruments } from '../../../actions/shop/sinstrumentAction';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { detailsOrder } from '../../../actions/business/borderAction';\r\nimport base from '../../../service/config'\r\n\r\nfunction BOrderDetails(props) {\r\n\r\n    const orderId = props.match.params.id;\r\n\r\n    const [searchKeyword, setSearchKeyword] = useState('');\r\n    const [sortOrder, setSortOrder] = useState('');\r\n    //const category = props.match.params.id ? props.match.params.id : '';\r\n\r\n    const BorderDetails = useSelector((state) => state.borderDetailsReducer);\r\n    const { order } = BorderDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(detailsOrder(orderId));\r\n\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ width: \"900px\" }}>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                {order ? (\r\n                    <Card>\r\n                        <div className=\"row\">\r\n                            {order.map((product) => (\r\n                                <div className=\"col-3\">\r\n                                    <Card style={{ color: \"#000\", backgroundColor: \"#fff\" }} >\r\n                                        <div className=\"row\">\r\n                                            <Card.Img variant=\"top\" height=\"150px\" src={base + product.imageUrl1} />\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <Card.Body>\r\n                                                <p style={{ color: \"#000\" }}>_________________________________</p>\r\n                                                <ListGroup className=\"list-group-flush\">\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\", textAlign: \"center\" }}><h4> {product.name}</h4></ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Price: {product.price}</ListGroupItem>\r\n                                                    <ListGroupItem style={{ backgroundColor: \"#fff\" }}>Category: {product.category.name}</ListGroupItem>\r\n                                                </ListGroup>\r\n                                            </Card.Body>\r\n                                        </div>\r\n                                    </Card>\r\n                                    <br />\r\n                                    <br />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </Card>\r\n\r\n                ) : (\r\n                        <h1></h1>\r\n                    )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default BOrderDetails;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\business\\border\\borderListGetForFarmer.jsx",["707","708"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\nimport { listForFarmerOrders } from '../../../actions/business/borderAction'\r\n\r\nconst BOrderListGetForFarmer = (props) => {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn)\r\n    const { userInfo } = userSignIn;\r\n\r\n    const myOrderList = useSelector((state) => state.farmerbOrderListReducer)\r\n    const { orders } = myOrderList;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listForFarmerOrders(userInfo.item1.id))\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const handleOrderDetails = (id) => {\r\n        props.history.push(\"/bOrderDeatils/\" + id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            {orders ? (\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        {orders.map((order) => (\r\n                            <div>\r\n                                <Card key={order.id} style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\" }} >\r\n                                    <Card.Body >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>OrderNo:-{order.orderNo}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>Total Amount:-{order.totalAmount}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <h5 style={{ color: \"#000\" }}>Order Time:-{order.orderDate}</h5>\r\n                                                </Card>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Card style={{ padding: \"10px\" }}>\r\n                                                    <Button\r\n                                                        style={{\r\n                                                            color: \"#fff\",\r\n                                                        }}\r\n                                                        color=\"success\" size=\"lg\" block type=\"submit\"\r\n                                                        onClick={() => handleOrderDetails(order.id)}\r\n                                                    >\r\n                                                        Details\r\n                                                </Button>\r\n                                                </Card>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                <br />\r\n                                <br />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                    <h1></h1>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BOrderListGetForFarmer;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\WholeSellerListScreen.jsx",["709","710"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Row, Col, Spinner, Card } from \"reactstrap\";\r\n\r\nimport { holeSellerList  } from '../../actions/user/accountActions'\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst WoleSellerListForAdmin = (props) => {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn)\r\n    const { userInfo } = userSignIn;\r\n\r\n    const agentLists = useSelector((state) => state.holesellerListReducer)\r\n    const { holesellers } = agentLists;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(holeSellerList())\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"firstName\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"phoneNumber\",\r\n            text: \"Phone Number\",\r\n            sort: true,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <Card style={{ width: \"876px\", padding: \"20px\", borderColor: \"#000\" }}>\r\n                        <Container>\r\n                            {holesellers ? (\r\n                                <ToolkitProvider\r\n                                    bootstrap4\r\n                                    keyField=\"id\"\r\n                                    data={holesellers}\r\n                                    columns={columns}\r\n                                    defaultSorted={defaultSorted}\r\n                                    search\r\n                                >\r\n                                    {(props) => (\r\n                                        <div>\r\n                                            <Row>\r\n\r\n                                                <Col>\r\n                                                    <div className=\"float-right\">\r\n                                                        <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <BootstrapTable\r\n                                                {...props.baseProps}\r\n                                                pagination={paginationFactory()}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </ToolkitProvider>\r\n                            ) : (\r\n                                    <div className=\"text-center\">\r\n                                        {props.errorCategoriesList ? (\r\n                                            <h4>{props.errorCategoriesList}</h4>\r\n                                        ) : (\r\n                                                <Spinner color=\"dark\" />\r\n                                            )}\r\n                                    </div>\r\n                                )}\r\n                        </Container>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default WoleSellerListForAdmin;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\FarmerListRequest.jsx",["711","712"],"import React, { useEffect } from 'react';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Row, Col, Spinner, Card } from \"reactstrap\";\r\n\r\nimport { farmerList } from '../../actions/user/accountActions'\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: \"id\",\r\n        order: \"asc\",\r\n    },\r\n];\r\n\r\n\r\nconst FarmerListForAdmin = (props) => {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn)\r\n    const { userInfo } = userSignIn;\r\n\r\n    const agentLists = useSelector((state) => state.farmerListReducer)\r\n    const { farmers } = agentLists;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(farmerList())\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"firstName\",\r\n            text: \"Name\",\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: \"phoneNumber\",\r\n            text: \"Phone Number\",\r\n            sort: true,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <Card style={{ width: \"876px\", padding: \"20px\", borderColor: \"#000\" }}>\r\n                        <Container>\r\n                            {farmers ? (\r\n                                <ToolkitProvider\r\n                                    bootstrap4\r\n                                    keyField=\"id\"\r\n                                    data={farmers}\r\n                                    columns={columns}\r\n                                    defaultSorted={defaultSorted}\r\n                                    search\r\n                                >\r\n                                    {(props) => (\r\n                                        <div>\r\n                                            <Row>\r\n\r\n                                                <Col>\r\n                                                    <div className=\"float-right\">\r\n                                                        <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <BootstrapTable\r\n                                                {...props.baseProps}\r\n                                                pagination={paginationFactory()}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </ToolkitProvider>\r\n                            ) : (\r\n                                    <div className=\"text-center\">\r\n                                        {props.errorCategoriesList ? (\r\n                                            <h4>{props.errorCategoriesList}</h4>\r\n                                        ) : (\r\n                                                <Spinner color=\"dark\" />\r\n                                            )}\r\n                                    </div>\r\n                                )}\r\n                        </Container>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-2\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default FarmerListForAdmin;\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\changePassswordScreen.jsx",["713","714","715"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userPasswordUpdate } from '../../actions/user/accountActions';\r\nimport { Card } from 'react-bootstrap'\r\nimport { Button, CustomInput, Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nfunction ChangePasswordScreen(props) {\r\n\r\n    const [currentPassword, setCurrentPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const adminUpdatePassword = useSelector((state) => state.userPasswordUpdate);\r\n    const { adminUpdatePasswordInfo } = adminUpdatePassword;\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const currentuserId = userInfo.item1.id;\r\n\r\n        dispatch(userPasswordUpdate(\r\n            currentuserId,\r\n            currentPassword,\r\n            newPassword,\r\n            confirmPassword\r\n        ));\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\">\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <Card style={{ padding: \"10px\", borderColor: \"#000\" }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-2\">\r\n\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <Card style={{ height: \"40px\", justifyContent: \"center\", alignItems: \"center\", color: \"#fff\", backgroundColor: \"#000\" }}>\r\n                                        Change Password\r\n                                    </Card>\r\n                                    <br />\r\n                                    <br />\r\n\r\n                                    <Form\r\n                                        onSubmit={submitHandler}\r\n                                    >\r\n                                        <div\r\n                                            style={{ alignItems: \"center\", justifyContent: \"center\", textAlign: \"center\" }}\r\n                                        >\r\n                                            <FormGroup >\r\n                                                <Label\r\n                                                    for=\"name\"\r\n                                                    style={{ color: \"#000\" }}\r\n                                                >\r\n                                                    Current Password\r\n                                                </Label>\r\n                                                <Input\r\n                                                    style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                    type=\"password\"\r\n                                                    name=\"password\"\r\n                                                    color=\"06E2FF\"\r\n                                                    placeholder=\"Enter Current Password\"\r\n                                                    size=\"lg\"\r\n                                                    value={currentPassword}\r\n                                                    onChange={(e) => setCurrentPassword(e.target.value)}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <FormGroup >\r\n                                                <Label\r\n                                                    for=\"password\"\r\n                                                    style={{ color: \"#000\" }}\r\n                                                >\r\n                                                    New Password\r\n                                                </Label>\r\n                                                <Input\r\n                                                    style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                    type=\"password\"\r\n                                                    name=\"newPassword\"\r\n                                                    color=\"06E2FF\"\r\n                                                    placeholder=\"Enter New Password\"\r\n                                                    size=\"lg\"\r\n                                                    value={newPassword}\r\n                                                    onChange={(e) => setNewPassword(e.target.value)}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <FormGroup >\r\n                                                <Label\r\n                                                    for=\"password\"\r\n                                                    style={{ color: \"#000\" }}\r\n                                                >\r\n                                                    Confirm Password\r\n                                                </Label>\r\n                                                <Input\r\n                                                    style={{ color: \"#000\", backgroundColor: \"#fff\" }}\r\n                                                    type=\"password\"\r\n                                                    name=\"confirmPassword\"\r\n                                                    color=\"06E2FF\"\r\n                                                    placeholder=\"Confirm Password\"\r\n                                                    size=\"lg\"\r\n                                                    value={confirmPassword}\r\n                                                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </div>\r\n\r\n                                        <Button\r\n                                            style={{\r\n                                                color: \"#000\",\r\n                                            }}\r\n                                            outline color=\"success\" size=\"lg\" block type=\"submit\">\r\n                                            Change\r\n                                        </Button>\r\n\r\n                                    </Form>\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default ChangePasswordScreen;\r\n\r\n","F:\\SoftKarrot\\farmers_market\\farmers-solution\\src\\components\\user\\UserProfileScreen.jsx",["716","717","718","719","720"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//import { detailsProduct } from '../../../../actions/Regular/productActions';\r\nimport { userProfileDetail } from '../../actions/user/accountActions';\r\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap'\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\n\r\nimport { detailsDivision } from '../../actions/Area/divisionActions';\r\nimport { detailsDistrict } from '../../actions/Area/districtActions';\r\nimport { detailsUpozila } from '../../actions/Area/upozilaActions';\r\nimport { detailsUnion } from '../../actions/Area/unionOrWardActions';\r\nimport base from '../../service/config';\r\n\r\n\r\n\r\nfunction UserProfileDetailsScreen(props) {\r\n\r\n    const userSignIn = useSelector((state) => state.userSignIn);\r\n    const { userInfo } = userSignIn;\r\n\r\n    const profileDetails = useSelector((state) => state.userProfileDetailsReducer);\r\n    const { sharer } = profileDetails;\r\n\r\n\r\n    console.log(\"Outside\", sharer)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(userProfileDetail(userInfo.item1.id));\r\n\r\n\r\n        dispatch(detailsDivision(userInfo.divisionId))\r\n        dispatch(detailsDistrict(userInfo.districtId))\r\n        dispatch(detailsUpozila(userInfo.upozilaId))\r\n        dispatch(detailsUnion(userInfo.unionOrWardId))\r\n\r\n\r\n        console.log(\"Inside\", sharer)\r\n        return () => {\r\n            //\r\n        };\r\n    }, []);\r\n\r\n    const handlePassWordChange = () => {\r\n        props.history.push('/changepassword');\r\n    }\r\n\r\n\r\n    return (<div className=\"container\" style={{ width: \"876px\", justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\", marginTop: \"60px\" }}\r\n    >\r\n        { userInfo ? (\r\n            <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#1FC46C\" }} >\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#1FC46C\", }}>\r\n                            <Card.Body>\r\n                                <br />\r\n                                <br />\r\n                                <br />\r\n                                <Card.Title style={{ color: \"#000\", backgroundColor: \"#fff\" }}><h3>{userInfo.item1.firstName} {userInfo.item1.lastName}</h3></Card.Title>\r\n                                <Card.Title style={{ color: \"#000\", backgroundColor: \"#fff\" }}><h4>Phone Number: {userInfo.item1.phoneNumber}</h4></Card.Title>\r\n                                <Card.Title style={{ color: \"#000\", backgroundColor: \"#fff\" }}><h4>Nid Number: {userInfo.item1.nid_Number} 0980349</h4></Card.Title>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <Card style={{ color: \"#000\", backgroundColor: \"#fff\", borderColor: \"#000\", }}>\r\n                            <Card.Img\r\n                                variant=\"top\"\r\n                                src={base + userInfo.item1.profilePhoto}\r\n                                height=\"186px\"\r\n                                width=\"186px\"\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {/* <div className=\"col-6\">\r\n                        <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\", }}>\r\n                            <Card.Body>\r\n                                <p style={{ color: \"#000\" }}>________________________________________________</p>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}><h4>Total Team Member: {sharer.downlineCount}</h4></ListGroupItem>\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}><h5>First Level: {sharer.firstLevelDownlineCount}</h5></ListGroupItem>\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}>Second Level: {sharer.secondLevelDownlineCount}</ListGroupItem>\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}>Third Level: {sharer.thirdLevelDownlineCount}</ListGroupItem>\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}>Fourth Level: {sharer.fourthLevelDownlineCount}</ListGroupItem>\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}>Fifth Level: {sharer.fifthLevelDownlineCount}</ListGroupItem>\r\n                                </ListGroup>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div> */}\r\n                    <div className=\"col-12\">\r\n                        {/* <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\", }}>\r\n                            <Card.Body>\r\n                                <p style={{ color: \"#000\" }}>________________________________________________</p>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}>Nominee Name: {userInfo.item1.nominee_Name}</ListGroupItem>\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}>Nominee Phone Number: {userInfo.item1.nominee_PhonNumber}</ListGroupItem>\r\n                                    <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}>Nominee Relation: {userInfo.item1.nominee_Relation}</ListGroupItem>\r\n                                </ListGroup>\r\n                            </Card.Body>\r\n                        </Card> */}\r\n                        <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\", height: \"136px\" }}>\r\n                            <Card.Body>\r\n                                <ListGroupItem style={{ color: \"#000\", backgroundColor: \"#fff\" }}>\r\n                                    <h5>Union/Ward- {userInfo.item1.unionOrWardName}, Upozila- {userInfo.item1.upozilaName}, District- {userInfo.item1.districtName}, Division- {userInfo.item1.divisionName}</h5>\r\n                                </ListGroupItem>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\", }}>\r\n                            <Card.Body>\r\n                                <Button\r\n                                    color=\"success\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    type=\"submit\"\r\n                                    width=\"30px\"\r\n                                    onClick={handlePassWordChange}\r\n                                >\r\n                                    Change Password?\r\n                            </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\", }}>\r\n                            <Card.Body>\r\n                                <Button\r\n                                    color=\"success\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    type=\"submit\"\r\n                                    width=\"30px\"\r\n                                    onClick={handlePassWordChange}\r\n                                >\r\n                                    Change Phone Number?\r\n                            </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <Card style={{ color: \"#fff\", backgroundColor: \"#fff\", borderColor: \"#000\", }}>\r\n                            <Card.Body>\r\n                                <Button\r\n                                    color=\"success\"\r\n                                    size=\"lg\"\r\n                                    block\r\n                                    type=\"submit\"\r\n                                    width=\"30px\"\r\n                                    onClick={handlePassWordChange}\r\n                                >\r\n                                    Change Email?\r\n                                </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n\r\n        ) : (\r\n                <h1></h1>\r\n            )\r\n        }\r\n    </div >\r\n    );\r\n\r\n}\r\nexport default UserProfileDetailsScreen;\r\n",{"ruleId":"721","replacedBy":"722"},{"ruleId":"723","replacedBy":"724"},{"ruleId":"725","severity":1,"message":"726","line":8,"column":8,"nodeType":"727","messageId":"728","endLine":8,"endColumn":27},{"ruleId":"729","severity":1,"message":"730","line":25,"column":13,"nodeType":"731","endLine":25,"endColumn":17},{"ruleId":"732","severity":1,"message":"733","line":30,"column":34,"nodeType":"734","messageId":"735","endLine":30,"endColumn":36},{"ruleId":"732","severity":1,"message":"733","line":128,"column":34,"nodeType":"734","messageId":"735","endLine":128,"endColumn":36},{"ruleId":"732","severity":1,"message":"733","line":180,"column":34,"nodeType":"734","messageId":"735","endLine":180,"endColumn":36},{"ruleId":"725","severity":1,"message":"736","line":37,"column":11,"nodeType":"727","messageId":"728","endLine":37,"endColumn":17},{"ruleId":"725","severity":1,"message":"737","line":13,"column":10,"nodeType":"727","messageId":"728","endLine":13,"endColumn":21},{"ruleId":"738","severity":1,"message":"739","line":54,"column":8,"nodeType":"740","endLine":54,"endColumn":10,"suggestions":"741"},{"ruleId":"738","severity":1,"message":"739","line":26,"column":8,"nodeType":"740","endLine":26,"endColumn":40,"suggestions":"742"},{"ruleId":"725","severity":1,"message":"743","line":20,"column":18,"nodeType":"727","messageId":"728","endLine":20,"endColumn":29},{"ruleId":"725","severity":1,"message":"744","line":22,"column":16,"nodeType":"727","messageId":"728","endLine":22,"endColumn":25},{"ruleId":"725","severity":1,"message":"745","line":28,"column":18,"nodeType":"727","messageId":"728","endLine":28,"endColumn":31},{"ruleId":"725","severity":1,"message":"746","line":30,"column":16,"nodeType":"727","messageId":"728","endLine":30,"endColumn":27},{"ruleId":"738","severity":1,"message":"739","line":45,"column":8,"nodeType":"740","endLine":45,"endColumn":36,"suggestions":"747"},{"ruleId":"738","severity":1,"message":"748","line":47,"column":8,"nodeType":"740","endLine":47,"endColumn":20,"suggestions":"749"},{"ruleId":"738","severity":1,"message":"739","line":56,"column":8,"nodeType":"740","endLine":56,"endColumn":10,"suggestions":"750"},{"ruleId":"725","severity":1,"message":"743","line":27,"column":18,"nodeType":"727","messageId":"728","endLine":27,"endColumn":29},{"ruleId":"725","severity":1,"message":"744","line":29,"column":16,"nodeType":"727","messageId":"728","endLine":29,"endColumn":25},{"ruleId":"725","severity":1,"message":"745","line":35,"column":18,"nodeType":"727","messageId":"728","endLine":35,"endColumn":31},{"ruleId":"725","severity":1,"message":"746","line":37,"column":16,"nodeType":"727","messageId":"728","endLine":37,"endColumn":27},{"ruleId":"738","severity":1,"message":"739","line":52,"column":8,"nodeType":"740","endLine":52,"endColumn":36,"suggestions":"751"},{"ruleId":"738","severity":1,"message":"752","line":44,"column":8,"nodeType":"740","endLine":44,"endColumn":23,"suggestions":"753"},{"ruleId":"738","severity":1,"message":"739","line":26,"column":8,"nodeType":"740","endLine":26,"endColumn":41,"suggestions":"754"},{"ruleId":"738","severity":1,"message":"739","line":57,"column":8,"nodeType":"740","endLine":57,"endColumn":10,"suggestions":"755"},{"ruleId":"725","severity":1,"message":"743","line":25,"column":18,"nodeType":"727","messageId":"728","endLine":25,"endColumn":29},{"ruleId":"725","severity":1,"message":"744","line":27,"column":16,"nodeType":"727","messageId":"728","endLine":27,"endColumn":25},{"ruleId":"725","severity":1,"message":"745","line":33,"column":18,"nodeType":"727","messageId":"728","endLine":33,"endColumn":31},{"ruleId":"725","severity":1,"message":"746","line":35,"column":16,"nodeType":"727","messageId":"728","endLine":35,"endColumn":27},{"ruleId":"738","severity":1,"message":"739","line":50,"column":8,"nodeType":"740","endLine":50,"endColumn":36,"suggestions":"756"},{"ruleId":"738","severity":1,"message":"739","line":26,"column":8,"nodeType":"740","endLine":26,"endColumn":39,"suggestions":"757"},{"ruleId":"738","severity":1,"message":"758","line":46,"column":8,"nodeType":"740","endLine":46,"endColumn":23,"suggestions":"759"},{"ruleId":"738","severity":1,"message":"739","line":57,"column":8,"nodeType":"740","endLine":57,"endColumn":10,"suggestions":"760"},{"ruleId":"725","severity":1,"message":"743","line":25,"column":18,"nodeType":"727","messageId":"728","endLine":25,"endColumn":29},{"ruleId":"725","severity":1,"message":"744","line":27,"column":16,"nodeType":"727","messageId":"728","endLine":27,"endColumn":25},{"ruleId":"725","severity":1,"message":"745","line":33,"column":18,"nodeType":"727","messageId":"728","endLine":33,"endColumn":31},{"ruleId":"725","severity":1,"message":"746","line":35,"column":16,"nodeType":"727","messageId":"728","endLine":35,"endColumn":27},{"ruleId":"738","severity":1,"message":"739","line":51,"column":8,"nodeType":"740","endLine":51,"endColumn":36,"suggestions":"761"},{"ruleId":"738","severity":1,"message":"739","line":26,"column":8,"nodeType":"740","endLine":26,"endColumn":34,"suggestions":"762"},{"ruleId":"738","severity":1,"message":"763","line":43,"column":8,"nodeType":"740","endLine":43,"endColumn":23,"suggestions":"764"},{"ruleId":"738","severity":1,"message":"739","line":59,"column":8,"nodeType":"740","endLine":59,"endColumn":10,"suggestions":"765"},{"ruleId":"725","severity":1,"message":"743","line":21,"column":18,"nodeType":"727","messageId":"728","endLine":21,"endColumn":29},{"ruleId":"725","severity":1,"message":"744","line":23,"column":16,"nodeType":"727","messageId":"728","endLine":23,"endColumn":25},{"ruleId":"725","severity":1,"message":"745","line":29,"column":18,"nodeType":"727","messageId":"728","endLine":29,"endColumn":31},{"ruleId":"725","severity":1,"message":"746","line":31,"column":16,"nodeType":"727","messageId":"728","endLine":31,"endColumn":27},{"ruleId":"738","severity":1,"message":"739","line":47,"column":8,"nodeType":"740","endLine":47,"endColumn":36,"suggestions":"766"},{"ruleId":"738","severity":1,"message":"739","line":26,"column":8,"nodeType":"740","endLine":26,"endColumn":33,"suggestions":"767"},{"ruleId":"738","severity":1,"message":"768","line":43,"column":8,"nodeType":"740","endLine":43,"endColumn":33,"suggestions":"769"},{"ruleId":"738","severity":1,"message":"770","line":36,"column":8,"nodeType":"740","endLine":36,"endColumn":18,"suggestions":"771"},{"ruleId":"738","severity":1,"message":"739","line":58,"column":8,"nodeType":"740","endLine":58,"endColumn":10,"suggestions":"772"},{"ruleId":"725","severity":1,"message":"773","line":19,"column":13,"nodeType":"727","messageId":"728","endLine":19,"endColumn":18},{"ruleId":"725","severity":1,"message":"743","line":23,"column":18,"nodeType":"727","messageId":"728","endLine":23,"endColumn":29},{"ruleId":"725","severity":1,"message":"744","line":25,"column":16,"nodeType":"727","messageId":"728","endLine":25,"endColumn":25},{"ruleId":"725","severity":1,"message":"745","line":31,"column":18,"nodeType":"727","messageId":"728","endLine":31,"endColumn":31},{"ruleId":"725","severity":1,"message":"746","line":33,"column":16,"nodeType":"727","messageId":"728","endLine":33,"endColumn":27},{"ruleId":"738","severity":1,"message":"739","line":45,"column":8,"nodeType":"740","endLine":45,"endColumn":36,"suggestions":"774"},{"ruleId":"738","severity":1,"message":"775","line":40,"column":8,"nodeType":"740","endLine":40,"endColumn":23,"suggestions":"776"},{"ruleId":"738","severity":1,"message":"739","line":21,"column":8,"nodeType":"740","endLine":21,"endColumn":16,"suggestions":"777"},{"ruleId":"725","severity":1,"message":"778","line":11,"column":11,"nodeType":"727","messageId":"728","endLine":11,"endColumn":21},{"ruleId":"725","severity":1,"message":"779","line":29,"column":12,"nodeType":"727","messageId":"728","endLine":29,"endColumn":21},{"ruleId":"738","severity":1,"message":"780","line":84,"column":8,"nodeType":"740","endLine":84,"endColumn":18,"suggestions":"781"},{"ruleId":"725","severity":1,"message":"779","line":29,"column":12,"nodeType":"727","messageId":"728","endLine":29,"endColumn":21},{"ruleId":"738","severity":1,"message":"780","line":84,"column":8,"nodeType":"740","endLine":84,"endColumn":18,"suggestions":"782"},{"ruleId":"738","severity":1,"message":"739","line":59,"column":8,"nodeType":"740","endLine":59,"endColumn":10,"suggestions":"783"},{"ruleId":"725","severity":1,"message":"784","line":24,"column":18,"nodeType":"727","messageId":"728","endLine":24,"endColumn":29},{"ruleId":"738","severity":1,"message":"739","line":39,"column":8,"nodeType":"740","endLine":39,"endColumn":10,"suggestions":"785"},{"ruleId":"738","severity":1,"message":"739","line":21,"column":8,"nodeType":"740","endLine":21,"endColumn":20,"suggestions":"786"},{"ruleId":"738","severity":1,"message":"787","line":38,"column":8,"nodeType":"740","endLine":38,"endColumn":23,"suggestions":"788"},{"ruleId":"738","severity":1,"message":"739","line":58,"column":8,"nodeType":"740","endLine":58,"endColumn":10,"suggestions":"789"},{"ruleId":"725","severity":1,"message":"784","line":24,"column":18,"nodeType":"727","messageId":"728","endLine":24,"endColumn":29},{"ruleId":"738","severity":1,"message":"739","line":39,"column":8,"nodeType":"740","endLine":39,"endColumn":10,"suggestions":"790"},{"ruleId":"738","severity":1,"message":"739","line":21,"column":8,"nodeType":"740","endLine":21,"endColumn":20,"suggestions":"791"},{"ruleId":"738","severity":1,"message":"787","line":37,"column":8,"nodeType":"740","endLine":37,"endColumn":23,"suggestions":"792"},{"ruleId":"738","severity":1,"message":"739","line":24,"column":8,"nodeType":"740","endLine":24,"endColumn":18,"suggestions":"793"},{"ruleId":"738","severity":1,"message":"739","line":48,"column":8,"nodeType":"740","endLine":48,"endColumn":36,"suggestions":"794"},{"ruleId":"738","severity":1,"message":"739","line":21,"column":8,"nodeType":"740","endLine":21,"endColumn":31,"suggestions":"795"},{"ruleId":"729","severity":1,"message":"730","line":81,"column":17,"nodeType":"731","endLine":81,"endColumn":21},{"ruleId":"725","severity":1,"message":"796","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"725","severity":1,"message":"797","line":2,"column":8,"nodeType":"727","messageId":"728","endLine":2,"endColumn":22},{"ruleId":"725","severity":1,"message":"798","line":3,"column":10,"nodeType":"727","messageId":"728","endLine":3,"endColumn":19},{"ruleId":"725","severity":1,"message":"799","line":3,"column":29,"nodeType":"727","messageId":"728","endLine":3,"endColumn":32},{"ruleId":"725","severity":1,"message":"800","line":3,"column":34,"nodeType":"727","messageId":"728","endLine":3,"endColumn":37},{"ruleId":"725","severity":1,"message":"801","line":3,"column":39,"nodeType":"727","messageId":"728","endLine":3,"endColumn":46},{"ruleId":"725","severity":1,"message":"802","line":4,"column":8,"nodeType":"727","messageId":"728","endLine":4,"endColumn":23},{"ruleId":"725","severity":1,"message":"803","line":5,"column":8,"nodeType":"727","messageId":"728","endLine":5,"endColumn":25},{"ruleId":"725","severity":1,"message":"804","line":7,"column":8,"nodeType":"727","messageId":"728","endLine":7,"endColumn":12},{"ruleId":"725","severity":1,"message":"805","line":12,"column":9,"nodeType":"727","messageId":"728","endLine":12,"endColumn":18},{"ruleId":"725","severity":1,"message":"806","line":20,"column":7,"nodeType":"727","messageId":"728","endLine":20,"endColumn":20},{"ruleId":"738","severity":1,"message":"739","line":43,"column":8,"nodeType":"740","endLine":43,"endColumn":10,"suggestions":"807"},{"ruleId":"725","severity":1,"message":"808","line":46,"column":11,"nodeType":"727","messageId":"728","endLine":46,"endColumn":18},{"ruleId":"725","severity":1,"message":"809","line":18,"column":12,"nodeType":"727","messageId":"728","endLine":18,"endColumn":14},{"ruleId":"725","severity":1,"message":"810","line":18,"column":16,"nodeType":"727","messageId":"728","endLine":18,"endColumn":21},{"ruleId":"725","severity":1,"message":"779","line":28,"column":12,"nodeType":"727","messageId":"728","endLine":28,"endColumn":21},{"ruleId":"725","severity":1,"message":"743","line":33,"column":18,"nodeType":"727","messageId":"728","endLine":33,"endColumn":29},{"ruleId":"725","severity":1,"message":"744","line":35,"column":16,"nodeType":"727","messageId":"728","endLine":35,"endColumn":25},{"ruleId":"725","severity":1,"message":"745","line":40,"column":18,"nodeType":"727","messageId":"728","endLine":40,"endColumn":31},{"ruleId":"725","severity":1,"message":"811","line":41,"column":18,"nodeType":"727","messageId":"728","endLine":41,"endColumn":31},{"ruleId":"725","severity":1,"message":"746","line":42,"column":16,"nodeType":"727","messageId":"728","endLine":42,"endColumn":27},{"ruleId":"738","severity":1,"message":"739","line":61,"column":8,"nodeType":"740","endLine":61,"endColumn":32,"suggestions":"812"},{"ruleId":"725","severity":1,"message":"813","line":93,"column":11,"nodeType":"727","messageId":"728","endLine":93,"endColumn":28},{"ruleId":"738","severity":1,"message":"739","line":21,"column":8,"nodeType":"740","endLine":21,"endColumn":10,"suggestions":"814"},{"ruleId":"725","severity":1,"message":"815","line":7,"column":10,"nodeType":"727","messageId":"728","endLine":7,"endColumn":16},{"ruleId":"738","severity":1,"message":"739","line":24,"column":8,"nodeType":"740","endLine":24,"endColumn":18,"suggestions":"816"},{"ruleId":"725","severity":1,"message":"817","line":12,"column":13,"nodeType":"727","messageId":"728","endLine":12,"endColumn":21},{"ruleId":"738","severity":1,"message":"818","line":32,"column":8,"nodeType":"740","endLine":32,"endColumn":10,"suggestions":"819"},{"ruleId":"729","severity":1,"message":"730","line":145,"column":17,"nodeType":"731","endLine":145,"endColumn":21},{"ruleId":"725","severity":1,"message":"820","line":16,"column":13,"nodeType":"727","messageId":"728","endLine":16,"endColumn":20},{"ruleId":"725","severity":1,"message":"821","line":30,"column":11,"nodeType":"727","messageId":"728","endLine":30,"endColumn":32},{"ruleId":"738","severity":1,"message":"822","line":37,"column":8,"nodeType":"740","endLine":37,"endColumn":10,"suggestions":"823"},{"ruleId":"729","severity":1,"message":"730","line":115,"column":17,"nodeType":"731","endLine":115,"endColumn":21},{"ruleId":"738","severity":1,"message":"822","line":22,"column":8,"nodeType":"740","endLine":22,"endColumn":10,"suggestions":"824"},{"ruleId":"729","severity":1,"message":"730","line":89,"column":21,"nodeType":"731","endLine":89,"endColumn":25},{"ruleId":"738","severity":1,"message":"739","line":20,"column":8,"nodeType":"740","endLine":20,"endColumn":10,"suggestions":"825"},{"ruleId":"729","severity":1,"message":"730","line":91,"column":21,"nodeType":"731","endLine":91,"endColumn":25},{"ruleId":"725","severity":1,"message":"826","line":3,"column":10,"nodeType":"727","messageId":"728","endLine":3,"endColumn":25},{"ruleId":"725","severity":1,"message":"827","line":12,"column":12,"nodeType":"727","messageId":"728","endLine":12,"endColumn":25},{"ruleId":"725","severity":1,"message":"828","line":12,"column":27,"nodeType":"727","messageId":"728","endLine":12,"endColumn":43},{"ruleId":"725","severity":1,"message":"829","line":13,"column":12,"nodeType":"727","messageId":"728","endLine":13,"endColumn":21},{"ruleId":"725","severity":1,"message":"830","line":13,"column":23,"nodeType":"727","messageId":"728","endLine":13,"endColumn":35},{"ruleId":"738","severity":1,"message":"831","line":27,"column":8,"nodeType":"740","endLine":27,"endColumn":10,"suggestions":"832"},{"ruleId":"729","severity":1,"message":"730","line":66,"column":25,"nodeType":"731","endLine":66,"endColumn":29},{"ruleId":"725","severity":1,"message":"796","line":1,"column":17,"nodeType":"727","messageId":"728","endLine":1,"endColumn":25},{"ruleId":"738","severity":1,"message":"739","line":33,"column":8,"nodeType":"740","endLine":33,"endColumn":10,"suggestions":"833"},{"ruleId":"738","severity":1,"message":"739","line":52,"column":8,"nodeType":"740","endLine":52,"endColumn":36,"suggestions":"834"},{"ruleId":"738","severity":1,"message":"822","line":28,"column":8,"nodeType":"740","endLine":28,"endColumn":18,"suggestions":"835"},{"ruleId":"725","severity":1,"message":"836","line":5,"column":42,"nodeType":"727","messageId":"728","endLine":5,"endColumn":47},{"ruleId":"725","severity":1,"message":"837","line":8,"column":10,"nodeType":"727","messageId":"728","endLine":8,"endColumn":21},{"ruleId":"725","severity":1,"message":"838","line":9,"column":10,"nodeType":"727","messageId":"728","endLine":9,"endColumn":22},{"ruleId":"725","severity":1,"message":"839","line":18,"column":13,"nodeType":"727","messageId":"728","endLine":18,"endColumn":20},{"ruleId":"725","severity":1,"message":"840","line":21,"column":13,"nodeType":"727","messageId":"728","endLine":21,"endColumn":19},{"ruleId":"738","severity":1,"message":"739","line":21,"column":8,"nodeType":"740","endLine":21,"endColumn":31,"suggestions":"841"},{"ruleId":"729","severity":1,"message":"730","line":81,"column":17,"nodeType":"731","endLine":81,"endColumn":21},{"ruleId":"725","severity":1,"message":"817","line":12,"column":13,"nodeType":"727","messageId":"728","endLine":12,"endColumn":21},{"ruleId":"738","severity":1,"message":"818","line":32,"column":8,"nodeType":"740","endLine":32,"endColumn":10,"suggestions":"842"},{"ruleId":"729","severity":1,"message":"730","line":145,"column":17,"nodeType":"731","endLine":145,"endColumn":21},{"ruleId":"725","severity":1,"message":"820","line":16,"column":13,"nodeType":"727","messageId":"728","endLine":16,"endColumn":20},{"ruleId":"725","severity":1,"message":"821","line":30,"column":11,"nodeType":"727","messageId":"728","endLine":30,"endColumn":32},{"ruleId":"738","severity":1,"message":"822","line":37,"column":8,"nodeType":"740","endLine":37,"endColumn":10,"suggestions":"843"},{"ruleId":"729","severity":1,"message":"730","line":115,"column":17,"nodeType":"731","endLine":115,"endColumn":21},{"ruleId":"725","severity":1,"message":"817","line":10,"column":13,"nodeType":"727","messageId":"728","endLine":10,"endColumn":21},{"ruleId":"738","severity":1,"message":"739","line":22,"column":8,"nodeType":"740","endLine":22,"endColumn":10,"suggestions":"844"},{"ruleId":"729","severity":1,"message":"730","line":92,"column":21,"nodeType":"731","endLine":92,"endColumn":25},{"ruleId":"725","severity":1,"message":"826","line":3,"column":10,"nodeType":"727","messageId":"728","endLine":3,"endColumn":25},{"ruleId":"725","severity":1,"message":"827","line":12,"column":12,"nodeType":"727","messageId":"728","endLine":12,"endColumn":25},{"ruleId":"725","severity":1,"message":"828","line":12,"column":27,"nodeType":"727","messageId":"728","endLine":12,"endColumn":43},{"ruleId":"725","severity":1,"message":"829","line":13,"column":12,"nodeType":"727","messageId":"728","endLine":13,"endColumn":21},{"ruleId":"725","severity":1,"message":"830","line":13,"column":23,"nodeType":"727","messageId":"728","endLine":13,"endColumn":35},{"ruleId":"738","severity":1,"message":"831","line":27,"column":8,"nodeType":"740","endLine":27,"endColumn":10,"suggestions":"845"},{"ruleId":"729","severity":1,"message":"730","line":65,"column":25,"nodeType":"731","endLine":65,"endColumn":29},{"ruleId":"738","severity":1,"message":"822","line":22,"column":8,"nodeType":"740","endLine":22,"endColumn":10,"suggestions":"846"},{"ruleId":"729","severity":1,"message":"730","line":88,"column":21,"nodeType":"731","endLine":88,"endColumn":25},{"ruleId":"725","severity":1,"message":"817","line":23,"column":13,"nodeType":"727","messageId":"728","endLine":23,"endColumn":21},{"ruleId":"738","severity":1,"message":"739","line":35,"column":8,"nodeType":"740","endLine":35,"endColumn":10,"suggestions":"847"},{"ruleId":"725","severity":1,"message":"817","line":23,"column":13,"nodeType":"727","messageId":"728","endLine":23,"endColumn":21},{"ruleId":"738","severity":1,"message":"739","line":35,"column":8,"nodeType":"740","endLine":35,"endColumn":10,"suggestions":"848"},{"ruleId":"725","severity":1,"message":"849","line":5,"column":18,"nodeType":"727","messageId":"728","endLine":5,"endColumn":29},{"ruleId":"725","severity":1,"message":"850","line":14,"column":13,"nodeType":"727","messageId":"728","endLine":14,"endColumn":36},{"ruleId":"725","severity":1,"message":"851","line":21,"column":11,"nodeType":"727","messageId":"728","endLine":21,"endColumn":19},{"ruleId":"725","severity":1,"message":"796","line":1,"column":28,"nodeType":"727","messageId":"728","endLine":1,"endColumn":36},{"ruleId":"725","severity":1,"message":"852","line":2,"column":10,"nodeType":"727","messageId":"728","endLine":2,"endColumn":14},{"ruleId":"725","severity":1,"message":"853","line":6,"column":16,"nodeType":"727","messageId":"728","endLine":6,"endColumn":25},{"ruleId":"738","severity":1,"message":"854","line":46,"column":8,"nodeType":"740","endLine":46,"endColumn":10,"suggestions":"855"},{"ruleId":"729","severity":1,"message":"730","line":170,"column":17,"nodeType":"731","endLine":170,"endColumn":21},"no-native-reassign",["856"],"no-negated-in-lhs",["857"],"no-unused-vars","'NavigationComponent' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'toggle' is assigned a value but never used.","'cartReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["858"],["859"],"'loadingSave' is assigned a value but never used.","'errorSave' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["860"],"React Hook useEffect has missing dependencies: 'dispatch' and 'division'. Either include them or remove the dependency array.",["861"],["862"],["863"],"React Hook useEffect has missing dependencies: 'dispatch' and 'districtId'. Either include them or remove the dependency array.",["864"],["865"],["866"],["867"],["868"],"React Hook useEffect has missing dependencies: 'dispatch' and 'upozilaId'. Either include them or remove the dependency array.",["869"],["870"],["871"],["872"],"React Hook useEffect has missing dependencies: 'dispatch' and 'unionId'. Either include them or remove the dependency array.",["873"],["874"],["875"],["876"],"React Hook useEffect has missing dependencies: 'dispatch', 'market.marketCode', 'market.name', and 'market.unionOrWardId'. Either include them or remove the dependency array.",["877"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["878"],["879"],"'roles' is assigned a value but never used.",["880"],"React Hook useEffect has missing dependencies: 'dispatch', 'role.description', 'role.name', and 'roleId'. Either include them or remove the dependency array.",["881"],["882"],"'userSignIn' is assigned a value but never used.","'uploading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'redirect'. Either include them or remove the dependency array.",["883"],["884"],["885"],"'successSave' is assigned a value but never used.",["886"],["887"],"React Hook useEffect has missing dependencies: 'category.description', 'category.name', 'categoryId', and 'dispatch'. Either include them or remove the dependency array.",["888"],["889"],["890"],["891"],["892"],["893"],["894"],["895"],"'useState' is defined but never used.","'BootstrapTable' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Spinner' is defined but never used.","'ToolkitProvider' is defined but never used.","'paginationFactory' is defined but never used.","'swal' is defined but never used.","'SearchBar' is assigned a value but never used.","'defaultSorted' is assigned a value but never used.",["896"],"'columns' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'successDelete' is assigned a value but never used.",["897"],"'saveSubCatHandler' is assigned a value but never used.",["898"],"'Button' is defined but never used.",["899"],"'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["900"],"'success' is assigned a value but never used.","'productDetailsHandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo.item1.id'. Either include them or remove the dependency array.",["901"],["902"],["903"],"'listinstruments' is defined but never used.","'searchKeyword' is assigned a value but never used.","'setSearchKeyword' is assigned a value but never used.","'sortOrder' is assigned a value but never used.","'setSortOrder' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["904"],["905"],["906"],["907"],"'Label' is defined but never used.","'listMarkets' is defined but never used.","'listproducts' is defined but never used.","'markets' is assigned a value but never used.","'market' is assigned a value but never used.",["908"],["909"],["910"],["911"],["912"],["913"],["914"],["915"],"'CustomInput' is defined but never used.","'adminUpdatePasswordInfo' is assigned a value but never used.","'redirect' is assigned a value but never used.","'Link' is defined but never used.","'ListGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'sharer', 'userInfo.districtId', 'userInfo.divisionId', 'userInfo.item1.id', 'userInfo.unionOrWardId', and 'userInfo.upozilaId'. Either include them or remove the dependency array.",["916"],"no-global-assign","no-unsafe-negation",{"desc":"917","fix":"918"},{"desc":"919","fix":"920"},{"desc":"921","fix":"922"},{"desc":"923","fix":"924"},{"desc":"917","fix":"925"},{"desc":"921","fix":"926"},{"desc":"927","fix":"928"},{"desc":"929","fix":"930"},{"desc":"917","fix":"931"},{"desc":"921","fix":"932"},{"desc":"933","fix":"934"},{"desc":"935","fix":"936"},{"desc":"917","fix":"937"},{"desc":"921","fix":"938"},{"desc":"939","fix":"940"},{"desc":"941","fix":"942"},{"desc":"917","fix":"943"},{"desc":"921","fix":"944"},{"desc":"945","fix":"946"},{"desc":"947","fix":"948"},{"desc":"949","fix":"950"},{"desc":"917","fix":"951"},{"desc":"921","fix":"952"},{"desc":"953","fix":"954"},{"desc":"955","fix":"956"},{"desc":"957","fix":"958"},{"desc":"957","fix":"959"},{"desc":"917","fix":"960"},{"desc":"917","fix":"961"},{"desc":"962","fix":"963"},{"desc":"964","fix":"965"},{"desc":"917","fix":"966"},{"desc":"917","fix":"967"},{"desc":"962","fix":"968"},{"desc":"964","fix":"969"},{"desc":"970","fix":"971"},{"desc":"921","fix":"972"},{"desc":"973","fix":"974"},{"desc":"917","fix":"975"},{"desc":"976","fix":"977"},{"desc":"917","fix":"978"},{"desc":"970","fix":"979"},{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"982","fix":"984"},{"desc":"917","fix":"985"},{"desc":"986","fix":"987"},{"desc":"917","fix":"988"},{"desc":"921","fix":"989"},{"desc":"990","fix":"991"},{"desc":"973","fix":"992"},{"desc":"980","fix":"993"},{"desc":"982","fix":"994"},{"desc":"917","fix":"995"},{"desc":"986","fix":"996"},{"desc":"982","fix":"997"},{"desc":"917","fix":"998"},{"desc":"917","fix":"999"},{"desc":"1000","fix":"1001"},"Update the dependencies array to be: [dispatch]",{"range":"1002","text":"1003"},"Update the dependencies array to be: [divisionId, division.countryId, dispatch]",{"range":"1004","text":"1005"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"1006","text":"1007"},"Update the dependencies array to be: [dispatch, division, divisionId]",{"range":"1008","text":"1009"},{"range":"1010","text":"1003"},{"range":"1011","text":"1007"},"Update the dependencies array to be: [dispatch, districtId, successUpdate]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [districtId, district.divisionId, dispatch]",{"range":"1014","text":"1015"},{"range":"1016","text":"1003"},{"range":"1017","text":"1007"},"Update the dependencies array to be: [upozilaId, upozila.districtId, dispatch]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [dispatch, successUpdate, upozilaId]",{"range":"1020","text":"1021"},{"range":"1022","text":"1003"},{"range":"1023","text":"1007"},"Update the dependencies array to be: [unionId, union.upozilaId, dispatch]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [dispatch, successUpdate, unionId]",{"range":"1026","text":"1027"},{"range":"1028","text":"1003"},{"range":"1029","text":"1007"},"Update the dependencies array to be: [dispatch, marketId, union.unionId]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [dispatch, market.marketCode, market.name, market.unionOrWardId, marketId, successUpdate]",{"range":"1032","text":"1033"},"Update the dependencies array to be: [props.history, redirect, userinfo]",{"range":"1034","text":"1035"},{"range":"1036","text":"1003"},{"range":"1037","text":"1007"},"Update the dependencies array to be: [dispatch, role.description, role.name, roleId, successUpdate]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [dispatch, roleId]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [dispatch, props.history, redirect, userInfo]",{"range":"1042","text":"1043"},{"range":"1044","text":"1043"},{"range":"1045","text":"1003"},{"range":"1046","text":"1003"},"Update the dependencies array to be: [categoryId, dispatch]",{"range":"1047","text":"1048"},"Update the dependencies array to be: [category.description, category.name, categoryId, dispatch, successUpdate]",{"range":"1049","text":"1050"},{"range":"1051","text":"1003"},{"range":"1052","text":"1003"},{"range":"1053","text":"1048"},{"range":"1054","text":"1050"},"Update the dependencies array to be: [category, dispatch]",{"range":"1055","text":"1056"},{"range":"1057","text":"1007"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"1058","text":"1059"},{"range":"1060","text":"1003"},"Update the dependencies array to be: [successSave, productId, dispatch]",{"range":"1061","text":"1062"},{"range":"1063","text":"1003"},{"range":"1064","text":"1056"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"1065","text":"1066"},"Update the dependencies array to be: [dispatch, userInfo.item1.id]",{"range":"1067","text":"1068"},{"range":"1069","text":"1068"},{"range":"1070","text":"1003"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"1071","text":"1072"},{"range":"1073","text":"1003"},{"range":"1074","text":"1007"},"Update the dependencies array to be: [category, dispatch, userInfo.item1.id]",{"range":"1075","text":"1076"},{"range":"1077","text":"1059"},{"range":"1078","text":"1066"},{"range":"1079","text":"1068"},{"range":"1080","text":"1003"},{"range":"1081","text":"1072"},{"range":"1082","text":"1068"},{"range":"1083","text":"1003"},{"range":"1084","text":"1003"},"Update the dependencies array to be: [dispatch, sharer, userInfo.districtId, userInfo.divisionId, userInfo.item1.id, userInfo.unionOrWardId, userInfo.upozilaId]",{"range":"1085","text":"1086"},[1493,1495],"[dispatch]",[838,870],"[divisionId, division.countryId, dispatch]",[1108,1136],"[successSave, successDelete, dispatch]",[1249,1261],"[dispatch, division, divisionId]",[1601,1603],[1285,1313],[1123,1138],"[dispatch, districtId, successUpdate]",[846,879],"[districtId, district.divisionId, dispatch]",[1593,1595],[1268,1296],[836,867],"[upozilaId, upozila.districtId, dispatch]",[1113,1128],"[dispatch, successUpdate, upozilaId]",[1576,1578],[1247,1275],[811,837],"[unionId, union.upozilaId, dispatch]",[1082,1097],"[dispatch, successUpdate, unionId]",[1612,1614],[1231,1259],[805,830],"[dispatch, marketId, union.unionId]",[1184,1209],"[dispatch, market.marketCode, market.name, market.unionOrWardId, marketId, successUpdate]",[990,1000],"[props.history, redirect, userinfo]",[1465,1467],[1052,1080],[869,884],"[dispatch, role.description, role.name, roleId, successUpdate]",[554,562],"[dispatch, roleId]",[3180,3190],"[dispatch, props.history, redirect, userInfo]",[3189,3199],[1523,1525],[870,872],[603,615],"[categoryId, dispatch]",[930,945],"[category.description, category.name, categoryId, dispatch, successUpdate]",[1529,1531],[877,879],[609,621],[935,950],[743,753],"[category, dispatch]",[1437,1465],[744,767],"[dispatch, props.match.params.id]",[1237,1239],[1881,1905],"[successSave, productId, dispatch]",[585,587],[810,820],[977,979],"[dispatch, productId, qty]",[1161,1163],"[dispatch, userInfo.item1.id]",[681,683],[551,553],[923,925],"[dispatch, orderId]",[880,882],[1561,1589],[841,851],"[category, dispatch, userInfo.item1.id]",[730,753],[981,983],[1181,1183],[662,664],[927,929],[707,709],[997,999],[976,978],[1510,1512],"[dispatch, sharer, userInfo.districtId, userInfo.divisionId, userInfo.item1.id, userInfo.unionOrWardId, userInfo.upozilaId]"]